<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redis on mungOps</title>
    <link>https://mungops.github.io/database/redis/</link>
    <description>Recent content in Redis on mungOps</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://mungops.github.io/database/redis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Redis 개요</title>
      <link>https://mungops.github.io/database/redis/redis01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://mungops.github.io/database/redis/redis01/</guid>
      <description>&lt;h2&gt;1.1 &lt;strong&gt;Redis란? (인메모리 데이터 저장소 개념)&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;11-redis란-인메모리-데이터-저장소-개념&#34;&gt;&lt;/span&gt;&#xA;    &lt;a href=&#34;#11-redis%eb%9e%80-%ec%9d%b8%eb%a9%94%eb%aa%a8%eb%a6%ac-%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%a0%80%ec%9e%a5%ec%86%8c-%ea%b0%9c%eb%85%90&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Redis는 데이터 구조 서버로, 주로 &lt;strong&gt;인메모리 데이터베이스&lt;/strong&gt;로 사용됩니다. 데이터가 메모리에 저장되어 빠른 읽기/쓰기가 가능하며, 다양한 데이터 구조를 지원합니다. Redis는 데이터를 디스크에 저장할 수도 있지만, 기본적으로 &lt;strong&gt;인메모리 방식&lt;/strong&gt;이므로 성능이 매우 빠릅니다. 데이터베이스, 캐시, 메시지 브로커 등 다양한 용도로 활용됩니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redis 데이터 타입과 활용 방법</title>
      <link>https://mungops.github.io/database/redis/redis03/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://mungops.github.io/database/redis/redis03/</guid>
      <description>&lt;h2&gt;3.1 &lt;strong&gt;String&lt;/strong&gt; (기본적인 Key-Value 저장, TTL 설정)&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;31-string-기본적인-key-value-저장-ttl-설정&#34;&gt;&lt;/span&gt;&#xA;    &lt;a href=&#34;#31-string-%ea%b8%b0%eb%b3%b8%ec%a0%81%ec%9d%b8-key-value-%ec%a0%80%ec%9e%a5-ttl-%ec%84%a4%ec%a0%95&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Redis의 &lt;code&gt;String&lt;/code&gt; 타입은 가장 기본적인 데이터 타입으로, &lt;strong&gt;Key-Value&lt;/strong&gt; 형태로 데이터를 저장합니다. &lt;code&gt;String&lt;/code&gt;은 텍스트, 숫자 등 다양한 형태의 데이터를 저장할 수 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redis 퍼시스턴스 (데이터 영속성)</title>
      <link>https://mungops.github.io/database/redis/redis04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://mungops.github.io/database/redis/redis04/</guid>
      <description>&lt;h2&gt;4.1 &lt;strong&gt;RDB (Redis Database Snapshot) 개념 및 설정&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;41-rdb-redis-database-snapshot-개념-및-설정&#34;&gt;&lt;/span&gt;&#xA;    &lt;a href=&#34;#41-rdb-redis-database-snapshot-%ea%b0%9c%eb%85%90-%eb%b0%8f-%ec%84%a4%ec%a0%95&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;RDB는 Redis에서 데이터를 &lt;strong&gt;스냅샷 형식&lt;/strong&gt;으로 디스크에 저장하는 방법입니다. 주기적으로 데이터를 덤프 파일로 저장하여, Redis가 재시작되었을 때 마지막으로 저장된 상태를 복원할 수 있게 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redis 복제 및 고가용성)</title>
      <link>https://mungops.github.io/database/redis/redis05/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://mungops.github.io/database/redis/redis05/</guid>
      <description>&lt;h2&gt;5.1 &lt;strong&gt;Redis Master-Slave Replication 개념 및 설정&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;51-redis-master-slave-replication-개념-및-설정&#34;&gt;&lt;/span&gt;&#xA;    &lt;a href=&#34;#51-redis-master-slave-replication-%ea%b0%9c%eb%85%90-%eb%b0%8f-%ec%84%a4%ec%a0%95&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Redis의 &lt;strong&gt;Master-Slave Replication&lt;/strong&gt;은 데이터를 복제하여 &lt;strong&gt;고가용성&lt;/strong&gt;을 제공하는 방식입니다. Master 노드는 데이터를 쓰고, Slave 노드는 Master의 데이터를 복제합니다. 이 구조는 데이터를 여러 서버에 분산시켜 장애 발생 시 빠른 복구를 가능하게 합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redis 성능 튜닝 및 모니터링</title>
      <link>https://mungops.github.io/database/redis/redis06/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://mungops.github.io/database/redis/redis06/</guid>
      <description>&lt;h2&gt;6.1 &lt;strong&gt;Redis 성능 최적화 전략 (메모리 사용량 줄이기, &lt;code&gt;maxmemory&lt;/code&gt; 정책)&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;61-redis-성능-최적화-전략-메모리-사용량-줄이기&#34;&gt;&lt;/span&gt;&#xA;    &lt;a href=&#34;#61-redis-%ec%84%b1%eb%8a%a5-%ec%b5%9c%ec%a0%81%ed%99%94-%ec%a0%84%eb%9e%b5-%eb%a9%94%eb%aa%a8%eb%a6%ac-%ec%82%ac%ec%9a%a9%eb%9f%89-%ec%a4%84%ec%9d%b4%ea%b8%b0&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Redis는 인메모리 데이터베이스로, 빠른 성능을 제공하지만 메모리 사용량에 제한이 있습니다. 성능 최적화를 위해서는 &lt;strong&gt;메모리 사용량&lt;/strong&gt;을 줄이고, &lt;code&gt;maxmemory&lt;/code&gt; 정책을 적절히 설정하는 것이 중요합니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redis 실무 활용 사례</title>
      <link>https://mungops.github.io/database/redis/redis07/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://mungops.github.io/database/redis/redis07/</guid>
      <description>&lt;h2&gt;7.1 &lt;strong&gt;세션 저장소로 Redis 활용하기 (PHP, Python, Node.js 연동)&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;71-세션-저장소로-redis-활용하기-php-python-nodejs-연동&#34;&gt;&lt;/span&gt;&#xA;    &lt;a href=&#34;#71-%ec%84%b8%ec%85%98-%ec%a0%80%ec%9e%a5%ec%86%8c%eb%a1%9c-redis-%ed%99%9c%ec%9a%a9%ed%95%98%ea%b8%b0-php-python-nodejs-%ec%97%b0%eb%8f%99&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Redis는 빠르고 효율적인 데이터 저장소로 세션 저장소로 자주 사용됩니다. 웹 애플리케이션에서 사용자 세션 데이터를 Redis에 저장하면, 빠른 속도로 세션을 조회하고 업데이트할 수 있습니다. Redis를 세션 저장소로 사용하는 방법을 PHP, Python, Node.js에서 어떻게 활용할 수 있는지 살펴보겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redis 트러블슈팅 및 실전 운영 전략</title>
      <link>https://mungops.github.io/database/redis/redis08/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://mungops.github.io/database/redis/redis08/</guid>
      <description>&lt;h2&gt;8.1 &lt;strong&gt;Redis 장애 시나리오 및 복구 방법&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;81-redis-장애-시나리오-및-복구-방법&#34;&gt;&lt;/span&gt;&#xA;    &lt;a href=&#34;#81-redis-%ec%9e%a5%ec%95%a0-%ec%8b%9c%eb%82%98%eb%a6%ac%ec%98%a4-%eb%b0%8f-%eb%b3%b5%ea%b5%ac-%eb%b0%a9%eb%b2%95&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Redis는 고성능 인메모리 데이터베이스이지만, 장애가 발생할 수 있는 상황도 존재합니다. Redis 장애를 해결하고 복구하는 방법에 대해 살펴보겠습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redis 설치 및 환경 설정</title>
      <link>https://mungops.github.io/database/redis/redis02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://mungops.github.io/database/redis/redis02/</guid>
      <description>&lt;h2&gt;2.1 &lt;strong&gt;Redis 설치 방법 (Linux, macOS, Windows, Docker)&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;21-redis-설치-방법-linux-macos-windows-docker&#34;&gt;&lt;/span&gt;&#xA;    &lt;a href=&#34;#21-redis-%ec%84%a4%ec%b9%98-%eb%b0%a9%eb%b2%95-linux-macos-windows-docker&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Redis는 다양한 플랫폼에서 쉽게 설치할 수 있습니다. 아래에서는 각 환경별로 Redis를 설치하는 방법을 설명합니다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
