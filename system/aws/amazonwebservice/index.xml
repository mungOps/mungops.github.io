<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mungOps – AWS docs</title>
    <link>https://mungops.github.io/system/aws/amazonwebservice/</link>
    <description>Recent content in AWS docs on mungOps</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    
	  <atom:link href="https://mungops.github.io/system/aws/amazonwebservice/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>CloudComputing과 AWS</title>
      <link>https://mungops.github.io/system/aws/amazonwebservice/aws%EB%9E%80/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mungops.github.io/system/aws/amazonwebservice/aws%EB%9E%80/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;strong&gt;AWS 란?&lt;/strong&gt;&lt;/h1&gt;&lt;h1&gt;&lt;/h1&gt;&lt;hr&gt;
&lt;h2&gt;&lt;strong&gt;Amazon Web Services ( AWS )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;amazon-web-services--aws-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#amazon-web-services--aws-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;AWS&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AWS는 Amazon에서 제공하는 클라우드 서비스로, &lt;strong&gt;네트워크를 기반으로 가상 컴퓨터와 스토리지를 비롯한 다양한 서비스를 제공&lt;/strong&gt; 합니다.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Cloud Computing 와 AWS&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;cloud-computing-와-aws&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#cloud-computing-%ec%99%80-aws&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AWS에 대해 공부하기 앞서, 우리는 Cloud Computing이 무엇이고, 어떠한 개념에 대해 알고 있어야 합니다. 그 이유는 AWS가 클라우드 컴퓨티 그 자체이기 때문이죠.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;클라우드 컴퓨팅 ( Cloud Computing : 이하 클라우드 )은 컴퓨터 리소스의 이용 형태로, &lt;strong&gt;클라우드는 컴퓨터의 계산 리소스, 스토리지, 애플리케이션 처리를 네트워크 기반 서비스로 제공하는 것을 뜻&lt;/strong&gt; 합니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;클라우드 컴퓨팅의 클라우드는 &amp;ldquo;구름 ( Cloud )&amp;ldquo;를 의미하는 것으로, Cloud는 Google의 최고 경영 책임자인 에릭 슈미트가 2006년 8월 &amp;ldquo;인터넷에 접속해서 다양한 리소스를 사용할 수 있게 하는 구조&amp;quot;를 구름으로 예를 들면서 널리 사용되게 되었으며, 현재는 대표적으로 Google의 GCP ( Google Cloud Platform ), Microsoft의 Azure, Amazon의 AWS가 널리 사용되어지고 있습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;예전부터 네트워크를 이용한 컴퓨터 리소스를 공유하는 개념은 존재해왔지만, 클라우드란 용어가 정착하게 된 결정적인 이유는, 브로드 밴드 네트워크의 일반화, 하드웨어 및 소프트웨어의 진화와 구글과 같은 플랫폼을 제공하는 기업 등의 여러 상호작용의 결과라고 할 수 있습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;Cloud Computing의 종류&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;cloud-computing의-종류&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#cloud-computing%ec%9d%98-%ec%a2%85%eb%a5%98&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/CloudComputing/Cloud01.png&#34; alt=&#34;CloudComputing&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;클라우드 컴퓨팅에도 여러 서비스의 종류가 있고, 이들 중 위의 그림에 나타난 클라우드 컴퓨팅을 대표하는 서비스에 대해 알아보도록 하겠습니다.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Infratructure as a Service : IaaS&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;infratructure-as-a-service--iaas&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#infratructure-as-a-service--iaas&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IaaS는 가상 서버 또는 스토리지 등의 리소스를 인터넷을 기반으로 제공하는 서비스를 의미하며, 추가적으로 네트워크 서비스 자체를 포함하기도 합니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IaaS의 가장 큰 장점은 물리적인 하드웨어를 관리할 필요가 없음에도, 직접적으로 컴퓨터 리소르를 사용할 수 있다는 점입니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;IaaS는 위의 그림에서처럼 가장 하단에 위치하며 클라우드 레이어로는 갖아 아래의 기초적인 부분을 담당합니다. 즉, IaaS는 물리 장치에 가장 가까운 서비스라 할 수 있습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Platform as a Service : PaaS&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;platform-as-a-service--paas&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#platform-as-a-service--paas&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PaaS는 데이터베이스 또는 애플리케이션 서버 등의 미들웨어를 제공하는 서비스입니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;OS와 미들웨어의 관리는 서비스 제공자가 하며, 사용자는 미들웨어만을 직접 사용할 수 있습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Software as as Service : SaaS&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;software-as-as-service--saas&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#software-as-as-service--saas&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SaaS는 소프트웨어 또는 애플리케이션의 기능을 인터넷을 통해 제공합니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SaaS는 내부적으로 메일 서비스, 큐 서비스, 업무 관리 시스템 등으로 다양하게 분류되어 있습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SaaS를 제공하는 것을 SaaS제공자 ( Provider )라고 부릅니다. 이는 ASP ( Application Service Provider )와 동일한 것으로, 다만 SaaS의 제공자는 클라우드라는 것에 조금 더 비중을 두어 말하는 것이 차이점이라 할 수 있습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;On Premise 서버와 Cloud 서버의 차이&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;on-premise-서버와-cloud-서버의-차이&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#on-premise-%ec%84%9c%eb%b2%84%ec%99%80-cloud-%ec%84%9c%eb%b2%84%ec%9d%98-%ec%b0%a8%ec%9d%b4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;On Premise ( 물리 서버 )라고하면 일반적으로 물리 머신을 한정해서 말하는 것이므로, 네트워크 장치 또는 전력 설비 등을 포함하는 의미로 On Premise라는 용어가 되었습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;On Premise는 조직 내부에서 사용할 목적으로 준비한 설비를 나타내며, 기업 내부에서 일반적으로 사용하는 형태라서 이전에는따로 명칭이 없었지만, 클라우드가 등장하면서 기존에 사용하던 형태를 나타내는 용어로 사용도기 시작했습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;그러면, On premise와 Cloud의 가장 큰 차이는 무엇일까요?, 그것은 크게 2가지로 &lt;strong&gt;소유자 ( Owner )와 용량 ( Capacity )&lt;/strong&gt; 입니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;소유자 ( Owner )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;소유자--owner-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ec%86%8c%ec%9c%a0%ec%9e%90--owner-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;**On Premise와 Public의 첫 번째 차이는 소유자로, On Premise의 경우 리소스 등의 예외가 있을 수는 있지만, 일반적으로 설비를 준비한 기업이 소유하고 있습니다. 반면, Public은 해당 깅버이 모든 리소스를 소유하고, 해당 리소스를 서비스로 만든 것을 사용하는 형태로, **소유자와 사용자가 다르다고 할 수 있습니다.****&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;소유자와 사용자가 다르다는 차이점은 다방면에서 영향을 끼칠 수 있습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;먼저 초기 비용의 차이입니다. On Premise는 서버 등을 이용할 때, 초기에 물리 장치를 구매해서 도입해야 하며, 여러 비용이 발생할 수 있습니다. 반면, AWS는 사용자가 물리 잧이를 구매할 필요가 없어 초기 비용이 거의 들지 않습니다. 이는 Public 차원에서 미리 물리 장치에 투자한 자산을 서비스 제공이라는 형태로 분산해서 회수하는 형태이기 때문입니다.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;이어서 서버 등의 조달 기간입니다. On Premise의 경우는 견적을 받고 발주 및 배송에 몇 주에서 몇 달의 시간이 걸리는 것이 일반적이지만, 반면 Public 환경에서는 웹 브라우저, 콘솔, 프로그램에서 호출하면 몇 분 내로 조달이 완료됩니다.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;이와 마찬가지로 사용하고 있는 서버를 추가하거나, 크기를 변경할 때도 동일합니다. On Premise의 경우는 시간과 비용이 들어가지만, 서버의 성능을 Scale Up하거나 이와 반대되는 경우, 혹은 서버자체를 새로 구매해야할 때, Public 상에서는 버튼 하나로 변경 및 추가 구매가 가능합니다.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;strong&gt;Option&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;On Premises&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Public&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;비용&lt;/td&gt;
          &lt;td&gt;초기에 모두 필요함&lt;/td&gt;
          &lt;td&gt;초기 비용은 따로 필요 없으며, 종량제 과금에 따라 비용이 분산되어 발생&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;서버 조달 기간&lt;/td&gt;
          &lt;td&gt;몇 주- 몇달&lt;/td&gt;
          &lt;td&gt;몇 분&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;서버 추가/ 변경&lt;/td&gt;
          &lt;td&gt;시간과 비용이 들어감&lt;/td&gt;
          &lt;td&gt;추가/ 변경과 관련된 비용이 필요하지 않음&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;용량 ( Capacity )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;용량--capacity-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ec%9a%a9%eb%9f%89--capacity-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;On Premise와 AWS에서는 &lt;strong&gt;소유와 사용&lt;/strong&gt;에 따라 비용이 발생하는 방식이 다릅니다. 추가로 서버 조달 기간 또는 조달 비용도 다릅니다. 따라서 용량 ( Capacity ) 설계도 전혀 다르게 해야합니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;On Premise는 서버 조달, 추가/변경으로 인한 기간이 길고, 비용이 크기 때문에 자원을 많이 사용할 때의 필요 자원에 맞춰서 모든 것을 준비해야 합니다. 반면 Public은 자원의 추가/ 변경이 쉬우며, 따라서 실제 수요에 맞춰 자원을 크게 만들 수도 있고, 작게 만들 수도 있습니다. 또한 대부분의 Public 플랫폼은 종량제 비용이므로 작게 만들면 비용을 줄일 수 있습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;즉, Public 인프라를 효율적으로 활용하려면, On Premise에서와 다르게 해야한다는 점 을 확실하게 이해해야 합니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;렌탈 서버 ( 공유 서버 )와 Public의 차이&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;렌탈-서버--공유-서버-와-public의-차이&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%eb%a0%8c%ed%83%88-%ec%84%9c%eb%b2%84--%ea%b3%b5%ec%9c%a0-%ec%84%9c%eb%b2%84-%ec%99%80-public%ec%9d%98-%ec%b0%a8%ec%9d%b4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;렌탈 서버&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;렌탈-서버&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%eb%a0%8c%ed%83%88-%ec%84%9c%eb%b2%84&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;위에서 Public 인프라가 다른 소유자의 자원을 사용한다는 점을 말씀드렸습니다. 그렇다면 우리가 흔히 알고 있는 호스팅 서버 혹은 공용 서버라 불리는 렌탈서버와 다른 점을 무엇일까요?.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;먼저 렌탈서버란 1대의 서버를 여러 사용자가 공용으로 사용 하는 형태로, 주로 웹 서버나 메일 서버를 사용하는 것이 일반적이었습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;즉, 1대의 물리서버를 모두 점유하는 전용 서버의 위에 가상 서버를 여러 개를 만들어, 해당 가상 서버를 점유하는 가상 전용 서버( VPS )라는 형태를 취하는 것이 렌탈 서버입니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;그렇다면, 이러한 렌탈 서버에 문제점은 무엇일까요? 그것은 크게 3가지로 말씀드릴수 있는데, &lt;strong&gt;낮은 자유도, 보안문제, 다른 사용자로 부터의 영향&lt;/strong&gt;으로 정리할 수 있습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;먼저, 낮은 자유도라는 것은 공용 서버를 이용할 때에는 root 계정이 아닌, 사용자 권한의 계정만 부여되므로, 이는 애플리케이션이나 미들웨어를 자신이 원할 때 변경 등이 불가능하며, 자신이 원하는 대로 환경을 바꿀 수 없습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;이어 보안 문제또한 위에 이어지는 문제로, 기본적으로 자신이 원하는 환경을 구축할 수 없으므로, 보안 대책도 업자에게 맡기게됩니다. 이에 따라 취약성이 있는 미들웨어를 사용하고 있다는 것을 파악하여도, 사용자는 이를 해결하기 어려우며, 또한 만약 다른 사람이 만든 애플리케이션에 취약점이 발견되면, 그 취약점에 영향을 받을 수도 있습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;마지막으로는 다른 사용자로부터의 영향입니다. 만약 Apache를 사용하는 웹 서버를 이용할 때 공용 서버를 사용하면 유저마다 프로세스를 사용하는 것이 아닌, 모두 동일한 프로세스를 분할해서 사용하게 되는 데, 만약 1명의 사용자가 부하처리, CGI 등을 사용한 프로그램 처리가 폭주하면 모든 사용자는 영향을 받게 되어, 서비스가 중단될 수 있어, 공용 서버는 다른 사용자에게 영향을 받기 쉬운 형태라 할 수 있습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;전용 서버와 가상 전용 서버&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;전용-서버와-가상-전용-서버&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ec%a0%84%ec%9a%a9-%ec%84%9c%eb%b2%84%ec%99%80-%ea%b0%80%ec%83%81-%ec%a0%84%ec%9a%a9-%ec%84%9c%eb%b2%84&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;위와 같은 렌탈 서버의 문제를 해결하기위해 전용서버와 가상 전용 서버라는 형태가 등장하게 되었습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;전용 서버와 가상 전용 서버는 관리자의 권한이 부여되어 있는 사용자 계정이 생성이 가능하여, 자유도가 높으며 스스로 관리가 가능합니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;한편 전용서버는 1대의 물리 서버를 1명의 사용자에게 주어야 하기에, 비용적으로 부담이 크며, 이 때문에 가상화 기술을 사용해 1대의 물리 서버를 여러 대의 가상 서버로 분할해 비용을 줄인 것을 가상 전용 서버입니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;또한 전용서버는 한 대의 물리서버이므로 다른 사용자의 영향을 전혀 받지 않으며, 반면 가상 전용 서버는 어느 정도의 영향을 받을 수 있지만, 렌탈 서버, 즉 공용 서버에 비해서는 거의 영향을 받지 않는 다고 할 수 있습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;옵션&lt;/th&gt;
          &lt;th&gt;공용 서버&lt;/th&gt;
          &lt;th&gt;전용 서버&lt;/th&gt;
          &lt;th&gt;가상 전용 서버&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;사용 형태&lt;/td&gt;
          &lt;td&gt;1대의 물리 서버를 분할해서 사용&lt;/td&gt;
          &lt;td&gt;1대의 물리 서버 점유&lt;/td&gt;
          &lt;td&gt;1대의 물리 서버 위에 있는 가상 서버를 점유&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;비용&lt;/td&gt;
          &lt;td&gt;적음&lt;/td&gt;
          &lt;td&gt;높음&lt;/td&gt;
          &lt;td&gt;중간&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;자유도&lt;/td&gt;
          &lt;td&gt;거의 없음&lt;/td&gt;
          &lt;td&gt;높음&lt;/td&gt;
          &lt;td&gt;높음&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;보안&lt;/td&gt;
          &lt;td&gt;관리 불가능&lt;/td&gt;
          &lt;td&gt;관리 가능&lt;/td&gt;
          &lt;td&gt;관리 가능&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;다른 사용자의 영향&lt;/td&gt;
          &lt;td&gt;높음&lt;/td&gt;
          &lt;td&gt;없음&lt;/td&gt;
          &lt;td&gt;거의 없음&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;렌탈 서버와 AWS ( Public )의 차이&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;렌탈-서버와-aws--public-의-차이&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%eb%a0%8c%ed%83%88-%ec%84%9c%eb%b2%84%ec%99%80-aws--public-%ec%9d%98-%ec%b0%a8%ec%9d%b4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;EC2라는 AWS의 가상 컴퓨트 서비스는 가상화 기술을 사용해 1대의 물리 컴퓨터 위에 여러 개의 가상 컴퓨터를 만들어서 사용합니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;**여기에서 사용자는 관리자 권한을 가진 계정을 사용할 수 있으며, 해당 가상 컴퓨터 내부의 모든 것을 관리할 수 있습니다. 따라서 이러하 면에서 **EC2는 가상 전용 서버와 비슷하다 할 수 있습니다.**&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;그러나 EC2는 디스크를 동적으로 추가하거나, CPU와 메모리를 다른 인스턴스 유형으로 쉽게 변경하는 등의 기존의 렌탈 서버에 없는 기능이 많습니다. 또한, 가상 머신 이미지를 생성해서 백업하고, 백업한 이미지를 사용하여 여러 서버로 복제하는 등의 서비스도 이용이 가능합니다. 이와 같이 AWS와 같은 대부분의 클라우드 컴퓨팅을 서비스를 하는 기업의 대부분은 위에 렌탈 서버가 제공하는 서비스 뿐만아닌 추가적인 서비스를 더 제공하는 형태라고 할 수 있습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;Private Cloud와 Public Cloud&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;private-cloud와-public-cloud&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#private-cloud%ec%99%80-public-cloud&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;크게 클라우드의 형태는 Private Cloud와 Public Cloud가 있습니다. 이는 말을 정의하는 사람에 따라 의미가 조금씩 다를 수 있으며, 일반적인 의미에서는 누구에게 서비스를 제공하는 가에 따라 정의됩니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;크게 Public Cloud는 GCP, Azure, AWS와 같이 누구에게나 서비스를 제공하는 형태의 서비스를 의미하고 Priavte Cloud는 기업 사내망, 즉 기업 전용서버로 해석되기도 하며, Public과는 반대로 특정 기업/ 조직 전용으로 제공되는 서비스를 의미합니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;이 뿐만 아니라 현재는 이 둘을 혼용으로 사용하는 Hybrid Cloud와 특정 업종의 기업들이 함께 운영해나가는 Community Cloud라는 용어가 있습니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;AWS에서의 Private Cloud의 정의&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws에서의-private-cloud의-정의&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws%ec%97%90%ec%84%9c%ec%9d%98-private-cloud%ec%9d%98-%ec%a0%95%ec%9d%98&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AWS를 제공하는 Amazon은 Public과 Private라는 용어를 따로 사용하고 있지 않습니다. 이는 클라우드라는 용어가 없었던 때부터 서비스를 시작한 Amazon의 자부심이라 할 수 있겠으며, 일반적으로 AWS를 대표적인 Public Cloud Service로 분류합니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AWS 내에는 Virtual Private Cloud ( VPC )라는 서비스가 있는 데, 이는 가상 네트워크를 생성하여 IP 주소 범위, 라우트 테이블, 네트워크 게이트웨이 등을 자유롭게 설정할 수 있게 해주는 서비스로, VPC를 사용하면 기존 데이터 센터와 회사 내부에 만들던 것과 같은 방식으로 네트워크를 만들 수 있습니다. 경우에 따라서는 이를 Private 클라우드라 표현하기도 합니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;AWS 서비스의 구성&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-서비스의-구성&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-%ec%84%9c%eb%b9%84%ec%8a%a4%ec%9d%98-%ea%b5%ac%ec%84%b1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AWS는 이미 30개가 넘는 서비스가 있으며, 해마다 새로운 서비스와 기능이 추가되므로 서비스의 전체적인 구성을 파악하는 것은 굉장히 힘듭니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;하지만 AWS를 사용할 때에 대한 기본적인 개념, 사고방식 등은 베이스로 학습한 후에 진행하는 것이 보다 빠른 이해를 도울 것입니다.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>AWS Computing</title>
      <link>https://mungops.github.io/system/aws/amazonwebservice/aws_computing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mungops.github.io/system/aws/amazonwebservice/aws_computing/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;strong&gt;AWS 컴퓨팅 서비스&lt;/strong&gt;&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;EC2 ( Elastic Compute Cloud )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;ec2--elastic-compute-cloud-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#ec2--elastic-compute-cloud-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Computing/EC2.png&#34; alt=&#34;EC2&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/ko/ec2/instance-types/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EC2 공식 홈페이지&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;가상 컴퓨팅 서비스를 제공해주는 서버로 실제 물리서버와 똑같은 형태의 서비스를 제공&lt;/li&gt;
&lt;li&gt;AMI를 통해 필요한 운영체제와 여러 소프트웨어를 쉽게 생성 가능&lt;/li&gt;
&lt;li&gt;키 페어를 사용하여 로그린 정보 보호&lt;/li&gt;
&lt;li&gt;SSH로 원격 연결이 가능&lt;/li&gt;
&lt;li&gt;중지가 가능한 EBS 기반 인스턴스와 임시 스토리지를 제공하여 중지가 불가능한 Instance Store 기반 EC2로 분류 됨 ( 재부팅은 모두 가능 )&lt;/li&gt;
&lt;li&gt;인스턴스의 유형으로는 범용, 컴퓨팅 최적화, 메모리 최적화, 스토리지 최적화 등이 존재&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;EC2 상태의 종류&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;ec2-상태의-종류&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#ec2-%ec%83%81%ed%83%9c%ec%9d%98-%ec%a2%85%eb%a5%98&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Pending :&lt;/strong&gt; 인스턴스가 구동하기 위해 준비중인 상태, 요금 미청구&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Runnung :&lt;/strong&gt; 인스턴스가 실행하고 사용할 준비가 된 상태, 요금 청구&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stopping :&lt;/strong&gt; 인스턴스가 중지 모드로 전환되려는 상태, 요금 미청구&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shutting-down :&lt;/strong&gt; 인스턴스가 종료를 위해 준비중인 상태, 요금 미청구&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Terminated :&lt;/strong&gt; 인스턴스가 종료된 상태, 요금 미청구&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;EC2 구매옵션&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;ec2-구매옵션&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#ec2-%ea%b5%ac%eb%a7%a4%ec%98%b5%ec%85%98&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;On demand :&lt;/strong&gt; 필요할 때 바로 생성하는 방식으로 1시간 단위로 과금이 이루어짐 ( 1분 사용시도 1시간 )&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Spot :&lt;/strong&gt; 경매방식의 인스턴스 기준가격보다 높은 가격 제시시 사용가능하며, 타인에 의해 불시로 종료되거나 정지될 수 있어 각종 테스트에 적합&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reserved :&lt;/strong&gt; 12개월- 36개월 단위로 예약하여 사용하는 인스턴스로 On demandq비해 가격이 대폭 할인되며, 장기적으로 사용할 경우 효율이 좋지만, 예약된 인스턴스이기에 사용하지 않아도 과금이 부과되어짐&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Lightsail&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;lightsail&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#lightsail&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Computing/Lightsail.png&#34; alt=&#34;EC2&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lightsail.aws.amazon.com/ls/webapp/home/instances&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lightsail Site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;AWS에서 VPS ( Virtual Private Server : 가상 사설 서버 ) 를 시작하는 가장 쉽고 빠른 방법&lt;/li&gt;
&lt;li&gt;가상 사설 서버, 영구적인 스토리지, 네트워킹을 포함&lt;/li&gt;
&lt;li&gt;클릭 한 번으로 모든 과정을 생략, 쉽게 VPS를 생성 및 관리&lt;/li&gt;
&lt;li&gt;확장가능 및 타 AWS Services에 접근 가능&lt;/li&gt;
&lt;li&gt;고가용성 어플리케이션 생성 가능&lt;/li&gt;
&lt;li&gt;저렴하고, 비용의 예측이 보다 쉬움&lt;/li&gt;
&lt;li&gt;완전히 사전구성되어 있는 서버 ( BluePrint )&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Lightsail의 유료 Plan&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;lightsail의-유료-plan&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#lightsail%ec%9d%98-%ec%9c%a0%eb%a3%8c-plan&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;월간 무료 데이터 허용량 초과시, 퍼블릭 IP 주소를 사용ㅎ여 요금 청구&lt;/li&gt;
&lt;li&gt;Lightsail 스냅샷 비용 : 인스턴스 스냅샷 + 디스크 스냅샷&lt;/li&gt;
&lt;li&gt;1시간 이상 인스턴스에 연결되어 있지 않은 고정 IP ( Elastic IP )&lt;/li&gt;
&lt;li&gt;무료로 주어지는 3백만 개의 쿼리를 초과하는 경우&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Lightsail&amp;amp; EC2&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;lightsail-ec2&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#lightsail-ec2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Lightsail의 주 사용용도&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;웹 사이트 및 블로그&lt;/li&gt;
&lt;li&gt;단순 앱&lt;/li&gt;
&lt;li&gt;개발 및 테스트 환경&lt;/li&gt;
&lt;li&gt;소수의 서버로 구성된 비즈니스 소프트웨어&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;EC2&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;빅데이터 분석&lt;/li&gt;
&lt;li&gt;고성능 컴퓨팅&lt;/li&gt;
&lt;li&gt;과학 분야 컴퓨팅&lt;/li&gt;
&lt;li&gt;멀티&amp;rsquo;티어 애플리케이션&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;ECS ( Elastic Container Service )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;ecs--elastic-container-service-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#ecs--elastic-container-service-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Computing/ECS.png&#34; alt=&#34;ECS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AWS의 Virtual Machine, VM (가상 머신)&lt;/li&gt;
&lt;li&gt;가상의 컴퓨터, 하나의 호스트에 안에 또다른 호스트를 만들어 사용하는 것&lt;/li&gt;
&lt;li&gt;CPU, Memory와 같은 주요 하드웨어 부품을 소프트웨어로 완전 재현해내어 기능을 흉내내게 하고(에뮬레이션), 격리된 실행 환경(OS)를 만듬 즉 하드웨어를 직접 가상화&lt;/li&gt;
&lt;li&gt;클러스터에서 도커 컨테이너를 손쉽게 관리하기 위해 컨테이너 관리 서비스&lt;/li&gt;
&lt;li&gt;클러스터는 Task(작업) 또는 서비스로 일컬어지는 컨테이너들의 집합&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;2가지 구성 요소로 시작 가능
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;EC2(Container Instance) :&lt;/strong&gt; EC2를 생성하여 EC2 내에 Task(컨테이너가 수행할 작업)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fargate :&lt;/strong&gt; EC2를 생성하거나 컨테이너를 실행하기 위한 Orchestration을 AWS가 맡아 하는 서비스로, 관리가 용이함&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;하나의 클러스터 내에 다수의 Task 혹은 컨테이너 인스턴스로 구성됨
또한 ELB, EBS 볼륨, VPC, IAM과 같은 기능을 사용하여 구성 가능&lt;/li&gt;
&lt;li&gt;즉 ECS 각 작업의 권한, ECS 액세스를 IAM으로 조절하거나, EC2 유형의 컨테이너 인스턴스만이 OS에 액세스 가능한 특징 등을 갖게 됨&lt;/li&gt;
&lt;li&gt;호스트의 OS(Operating System) 내에 또다른 실행환경의 OS가 존재함 윈도우 OS의 호스트 내에 리눅스, 우분투 등의 다양한 OS를 올릴 수 있음&lt;/li&gt;
&lt;li&gt;다만 OS를 포함하기 때문에 용량을 많이 차지할 뿐더러, 사용자가 필요치 않는 기능까지 포함할 수 있으며 느림&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Linux Container&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;linux-container&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#linux-container&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;ECS를 사용하는 목적이자 관리 대상&lt;/li&gt;
&lt;li&gt;하드웨어가 아닌 OS를 가상화하여 커널을 공유하며 프로세스(컨테이너와 비슷)를 격리된 환경에서 실행하는 것&lt;/li&gt;
&lt;li&gt;VM와 달리 달리 호스트의 OS에서 가상화를 실시하여, 이 OS 위에 프로세스들이 ‘컨테이너’로서 격리된 환경에서 실행됨&lt;/li&gt;
&lt;li&gt;호스트의 입장에선 컨테이너는 프로세스에 불과하지만, 컨테이너 입장에서는 독립된 실행환경임&lt;/li&gt;
&lt;li&gt;OS를 포함하지 않는만큼 가볍고, 하드웨어를 가상화하지 않기 때문에 빠름&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Kernel&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;kernel&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#kernel&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Operaintg System에서 가장 중요한 역할을 맡고 있는 핵심(核心)&lt;/li&gt;
&lt;li&gt;커널이 각 프로세스(실행환경)에 하드웨어 자원(CPU 등)을 할당하고, 작업 스케쥴링(처리순서)를 담당하며, 프로세스 간 접근과 보안을 책임짐&lt;/li&gt;
&lt;li&gt;과거에 커널이 없던 시절에도 컴퓨터는 존재할 수 있었으나 메모리를 초기화하기 위해서는 컴퓨터를 리부팅해야 하는 등, 자원관리/제어 주체의 필요성에 의해 탄생&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;docker&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#docker&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;앞서 설명한 Linux Container 기술에 근간을 두는 오픈소스 컨테이너 프로젝트
‘Docker’라는 단어 자체가 ‘부두에서 일하는 노동자’, 즉 컨테이너를 관리하는 존재임을 뜻함&lt;/li&gt;
&lt;li&gt;Linux Container 기술을 사용하는 솔루션이므로 별도의 OS를 설치하지 않고 컨테이너를 생성하여 애플리케이션을 실행함&lt;/li&gt;
&lt;li&gt;컨테이너를 생성할 이미지(서비스에 필요한 리소스를 모아둔 최소한의 단위)를 기반으로 운영함&lt;/li&gt;
&lt;li&gt;이미지만 가지고 있다면 어느 시점에서든 동일한 리소스의 컨테이너를 생성할 수 있음&lt;/li&gt;
&lt;li&gt;그 밖에 컨테이너간의 연결, 다양한 API 제공 등의 기능을 보유&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Lambda&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;lambda&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#lambda&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Computing/Lambda.png&#34; alt=&#34;EC2&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Serverless Service&lt;/li&gt;
&lt;li&gt;서버를 구축, 프로비져닝하고 필요한 패키지를 설치하는 등의 과정을 거치지 않고, 코드를 실행하는 서비스&lt;/li&gt;
&lt;li&gt;사용자는 애플리케이션이나 백엔드 서비스를 관리할 필요 없이 코드를 실행할 수 있음&lt;/li&gt;
&lt;li&gt;CloudWatch, ALB, DynamoDB 등을 트리거로 이용하여 특정 상황에서 코드를 실행시키고 것이 가능&lt;/li&gt;
&lt;li&gt;API Gateway와 Lambda를 조합하여 요청별로 특정 코드를 수행하도록 구성 가능
15분을 초과하는 작업에 대해서는 Lambda 비적합&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Lamda Function의 정의와 구성&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;lamda-function의-정의와-구성&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#lamda-function%ec%9d%98-%ec%a0%95%ec%9d%98%ec%99%80-%ea%b5%ac%ec%84%b1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;코드를 실행하기 위해 호출할 수 있는 리소스&lt;/li&gt;
&lt;li&gt;이벤트를 처리하는 코드, 계층, 트리거, 전달 대상 등으로 구성됨
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;함수코드 :&lt;/strong&gt; 실제 호출되기 실행되는 코드, Runtime(코드 실행지원), IAM, VPC, Memory 등으로 구성됨&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;트리거 :&lt;/strong&gt; 함수코드를 발동시키는 서비스(S3, SNS, SQS, DynamoDB, CloudWatch Event, Cloudwatch Log 등)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SNS의 메시지 구독 대상에 Lambda를 포함시키면, 메시지 발송시 Lambda가 이를 전달받고 함수코드 실행
&lt;ul&gt;
&lt;li&gt;전달대상 : 함수가 비동기식으로 호출되거나, 레코드를 처리한 경우 전달될 대상&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SNS, SQS, 또다른 Lambda, EventBridge 이벤트 버스로 전달가능&lt;/li&gt;
&lt;li&gt;NS로부터 메시지를 전달받아 코드를 처리하고 이를 SQS로 보내 메시지 대기열에 적재할 수 있음&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;EC2 vs Lambda&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;ec2-vs-lambda&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#ec2-vs-lambda&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;EC2 사용시 프로비져닝, 운영 체제, 네트워크 세부 설정, 보안 설정 등을 사용자가 원하는 방향으로 지정 가능&lt;/li&gt;
&lt;li&gt;Lambda 사용시 프로비져닝 필요없이 AWS가 모니터링, 프로비져닝, 보안패치 적용, 코드 배포를 모두 수행함&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Batch&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;batch&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#batch&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Computing/Batch.png&#34; alt=&#34;Batch&#34; loading=&#34;lazy&#34; /&gt;&lt;br&gt;
&lt;img src=&#34;https://mungops.github.io/images/AWS/Computing/Batch2.png&#34; alt=&#34;Batch&#34; loading=&#34;lazy&#34; /&gt;&lt;br&gt;
&lt;img src=&#34;https://mungops.github.io/images/AWS/Computing/Batch3.png&#34; alt=&#34;Batch&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;종합 관리형 서비스&lt;/li&gt;
&lt;li&gt;한 리전 내의 여러 가용 영역에 걸쳐 배치 작업을 실행하는 과정을 간소화하는 리전 서비스&lt;/li&gt;
&lt;li&gt;새 VPC 또는 기존 VPC에서 컴퓨팅 환경을 생성할 수 있음&lt;/li&gt;
&lt;li&gt;AWS Batch를 사용하면 AWS 클라우드에서 배치 컴퓨팅 워크로드를 실행이 가능
&lt;ul&gt;
&lt;li&gt;배치 컴퓨팅 : 다수의 사람들이 수 많은 컴퓨터 리소스에 엑세스 할 때 일반적으로 사용하는 방법&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;AWS Batch의 구성요소&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-batch의-구성요소&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-batch%ec%9d%98-%ea%b5%ac%ec%84%b1%ec%9a%94%ec%86%8c&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;작업&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;AWS Batch에 제출한 작업 단위 ( 쉘 스크립ㅌ, Linux 실행 파일, Docker 컨테이너 이미지 )&lt;/li&gt;
&lt;li&gt;작업에는 이름이 있으며, 파라미터를 사용하여 컴퓨팅 환경의 인스턴스에서 컨테이너화된 애플리케이션으로 실행&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;작업 정의&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;작업이 실행되는 방식을 지정하며 작업에 있는 리소스에 대한 블루프린트를 의미&lt;/li&gt;
&lt;li&gt;IAM 역할을 제공하여 다른 AWS 리소스에 프로그래밍 방식으로 엑세스할 수 있으며 메모리 및 CPU 요구 사항을 모두 지정가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;작업 대기열&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;AWS Batch 작업이 대기열 예약되는 환경&lt;/li&gt;
&lt;li&gt;우선 순위 갑 및 작업 대기열 전체에 우선 순위 할당 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;컴퓨팅 환경&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;작업을 싱해하는 데 사용되는 관리형 또는 비관리형 컴퓨팅 리소스 세트&lt;/li&gt;
&lt;li&gt;여러 세부 수준에서의 인스턴스 유형의 설정이 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Batch Group&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;batch-group&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#batch-group&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;클러스터 :&lt;/strong&gt; 인스턴스를 AZ 내에서 근접하게 배치, 결합된 노드 간 낮은 지연 시간의 네트워크 달성 가능&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;파티션 :&lt;/strong&gt; 인스턴스가 담긴 그룹을 논리 세그먼트로 나누어 각 파티션에 배치, 최대 7개의 파티션을 가질 수 있으며, 각 파티션은 자체 랙 세트를 보유하고 자체 네트워크 전원을 보유&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;분산 :&lt;/strong&gt; 파티션이 논리 세그먼트로 분리된 인스턴스 그룹인 것과 달리 분산은 인스턴스 개체 하나가 자체 랙에 분산 배치됨, AZ당 최대 7개의 인스턴스 배치 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Elastic Beanstalk&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;elastic-beanstalk&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#elastic-beanstalk&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Computing/Elasticbeanstalk.png&#34; alt=&#34;ElasticBeanstalk&#34; loading=&#34;lazy&#34; /&gt;
&lt;img src=&#34;https://mungops.github.io/images/AWS/Computing/Elasticbeanstalk2.png&#34; alt=&#34;ElasticBeanstalk&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java, NET, PHP, Node js, Python, Ruby, Go, Docker을 사용하여 Apache, Nginx, Passenger, llS와 같은 친숙한 서버에서 개발된 웹 어플리케이션 및 서비스를 간편하게 배포하고 조정 할 수 있는 서비스&lt;/li&gt;
&lt;li&gt;EC2, ASG, RDS 등 AWS 리소스들을 조합하여 완성된 어플리케이션 플랫폼으로 PaaS의 일종&lt;/li&gt;
&lt;li&gt;오토 스케일링, 로브 밸런싱, 버전 관리 등의 기능을 콘솔에서 몇 번의 클릭으로 생성 가능&lt;/li&gt;
&lt;li&gt;실제 서비스가 아니기에 사용 요금이 없음&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Elastic Beanstalk의 장점&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;elastic-beanstalk의-장점&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#elastic-beanstalk%ec%9d%98-%ec%9e%a5%ec%a0%90&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;간단한 서버 세팅&lt;/li&gt;
&lt;li&gt;환경변수들을 쉽게 변경/ 관리가 가능&lt;/li&gt;
&lt;li&gt;오토 스케일링이 용이&lt;/li&gt;
&lt;li&gt;로그의 자동화&lt;/li&gt;
&lt;li&gt;추가요금이 없음&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;
      </description>
    </item>
    
    <item>
      <title>AWS Database</title>
      <link>https://mungops.github.io/system/aws/amazonwebservice/aws_database/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mungops.github.io/system/aws/amazonwebservice/aws_database/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;strong&gt;AWS DataBase&lt;/strong&gt;&lt;/h1&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;Amazon RDS ( Relational Database Service )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;amazon-rds--relational-database-service-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#amazon-rds--relational-database-service-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Database/RDS.png&#34; alt=&#34;RDS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;분산 관계형 데이터베이스&lt;/li&gt;
&lt;li&gt;MariaDB, MySQL, PostgreSQL, Oracle 등을 AWS에서 제공해주는 것&lt;/li&gt;
&lt;li&gt;애플리케이션 내에서 관계형 데이터베이스의 설정, 운영, 스케일링을 단순케 하도록 설계된 클라우드 내에서 동작하는 웹 서비스&lt;/li&gt;
&lt;li&gt;데이터베이스 소프트웨어 패치하거나 데이터베이스를 백업하거나 시점 복구를 활성화하는 것과 같은 복잡한 관리 프로세스들은 자동으로 관리&lt;/li&gt;
&lt;li&gt;스토리지와 연산 자원들을 스케일링 하는 것은 하나의 API 호출로 수행이 가능&lt;/li&gt;
&lt;li&gt;관계형 데이터베이스를 AWS 상에서 사용할 수 있도록 지원하는 서비스&lt;/li&gt;
&lt;li&gt;생성 후 서비스를 이용하기만 되므로 SaaS에 해당&lt;/li&gt;
&lt;li&gt;MySQL, MariaDB, Postgre SQL, Oracle, MS SQL, Aurora 사용 가능&lt;/li&gt;
&lt;li&gt;DB 인스턴스에 대한 shell 지원 불가 및 OS 제어 불가능 ( AWS 관리 )&lt;/li&gt;
&lt;li&gt;백업, 소프트웨어 패치, 장애 감지 및 복구를 AWS가 관리&lt;/li&gt;
&lt;li&gt;Storage 용량에 대하여 Auto Scaling&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MariaDB, MySQL, Aurora는 서로 호환이 가능&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;DB Instance&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;db-instance&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#db-instance&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;RDS의 기본 구성요소로서 클라우드에서 실행하는 격리된 데이터베이스 환경을 의미, 인스턴스 내에서는 여러 사용자가 만든 데이터베이스가 포함되며 엑세스할 여러 도구와 앱 사용 가능&lt;/li&gt;
&lt;li&gt;DB 인스턴스도 EC2처럼 다양한 클래스를 가지고 있음 ( db.m5, db.r5 등 )&lt;/li&gt;
&lt;li&gt;RDS도 클라우드에서 실행되기 때문에 하나의 AZ에서 격리되어 인스턴스로서 실행&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;DB Instance Storage&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;db-instance-storage&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#db-instance-storage&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;데이터베이스의 유지를 위패 EBS를 사용하며 필요한 스토리지 용량에 맞춰 자동으로 데이터를 여러 EBS 볼륨에 나누어 저장
스토리지의 유형&lt;/li&gt;
&lt;li&gt;범용 SSD: 대부분의 워크로드에서 사용하는 기본적인 스토리지&lt;/li&gt;
&lt;li&gt;프로비져닝 IOPS: 빠르고 일관적인 I/O 성능이 필요하고 일관적으로 낮은 지연시간이 요구될 경우 사용하는 스토리지 ( I/O input/ Output )&lt;/li&gt;
&lt;li&gt;마그네틱: 접속 빈도가 적은 워크로드에 적합한 스토리지&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Multi-AZ&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;multi-az&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#multi-az&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;RDS는 Multi-AZ라는 기능을 통해 고가용성을 지원 ( 다수의 AZ에 DB 인스턴스를 둠으로써 하나 혹은 그 이상의 AZ가 파괴되어 서브시가 불가능 할 때를 대비 )&lt;/li&gt;
&lt;li&gt;기본 인스턴스가 수행해야할 작업( 백업, 스냅샷 생성 ) 등을 대신하여 수행함으로서 기본 인스턴스의 부담을 줄임&lt;/li&gt;
&lt;li&gt;RDS도 클라우드에서 실행되기 때문에 하나의 AZ에서 격리되어 인스턴스로서 실행&lt;/li&gt;
&lt;li&gt;기본 인스턴스에서 스냅샷을 캡쳐한 후 다른 AZ에 복원하여 ‘동기식’ 예비 복제본을 생성&lt;/li&gt;
&lt;li&gt;Active( AZ A )-Standby ( AZ B, C ) 구조를 형셩한 후 지속적으로 동기화&lt;/li&gt;
&lt;li&gt;‘ 예비 ‘ 복제본이기 때문에 읽기 및 쓰기 작업을 수행할 수 없음&lt;/li&gt;
&lt;li&gt;Multi-AZ를 사용하는 경우, 단일 AZ 배포에 비해 쓰기 및 저장 지연 시간이 길어질 수 있음 ( 동기화 문제 )&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Multi-AZ&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;multi-az-1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#multi-az-1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Multi-AZ를 활성화한 상태에서 DB 인스턴스에 문제가 발생하면 자동으로 다른 AZ의 예비 복제본 ( Standby )로 전환하며 서비스를 이어나감&lt;/li&gt;
&lt;li&gt;전환에 사용되는 시간은 60- 120초
전환되는 상황&lt;/li&gt;
&lt;li&gt;가용 영역( AZ ) 중단&lt;/li&gt;
&lt;li&gt;기본 DB 인스턴스 오류&lt;/li&gt;
&lt;li&gt;DB 인스턴스 서버 유형 변경&lt;/li&gt;
&lt;li&gt;기본 DB 인스턴스 OS에서 소프트웨어 패치 실시&lt;/li&gt;
&lt;li&gt;장애 조치 재부팅( Failover ) 실시&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;strong&gt;DB Instance Storage&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;db-instance-storage-1&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#db-instance-storage-1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;데이터베이스의 유지를 위패 EBS를 사용하며 필요한 스토리지 용량에 맞춰 자동으로 데이터를 여러 EBS 볼륨에 나누어 저장&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;strong&gt;Read Replica&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;read-replica&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#read-replica&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;읽기 전용의 복제본, 기본 DB 인스턴스가 읽기와 쓰기를 담당한다면 Read Replica는 읽기 작업만을 담당하여 마스터 DB 인스턴스의 부하를 줄임&lt;/li&gt;
&lt;li&gt;우선 DB&lt;/li&gt;
&lt;li&gt;마그네틱: 접속 빈도가 적은 워크로드에 적합한 스토리지&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Automated Backup&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;automated-backup&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#automated-backup&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;RDS의 자동백업으로 개별 데이터베이스를 백업하는 것이 아닌 DB 인스턴스 전체를 백업하는 것&lt;/li&gt;
&lt;li&gt;매일매일 백업이 이루어지며, 기본 보존기간은 CLI로 생성시 1일&amp;amp; 콘솔로 생성시 7일이며 최저 1일부터 35일 까지 가능&lt;/li&gt;
&lt;li&gt;특정시점을 지정하여 복원가능하며 복원 기간내로부터 최근 5분까지 특정시점을 지정하여 복원 가능&lt;/li&gt;
&lt;li&gt;사용자가 백업시간에 자동적으로 백업되며, 백업 중에는 스토리지 I/O가 일시적으로 중단될 수 있음 ( Multi-AZ 사용시 Standby에서 백업 실시 )
전환되는 상황&lt;/li&gt;
&lt;li&gt;가용 영역( AZ ) 중단&lt;/li&gt;
&lt;li&gt;기본 DB 인스턴스 오류&lt;/li&gt;
&lt;li&gt;DB 인스턴스 서버 유형 변경&lt;/li&gt;
&lt;li&gt;기본 DB 인스턴스 OS에서 소프트웨어 패치 실시&lt;/li&gt;
&lt;li&gt;장애 조치 재부팅( Failover ) 실시&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Enhanced Monitoring&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;enhanced-monitoring&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#enhanced-monitoring&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;RDS의 지표를 실시간으로 모니터링하는 ‘ 강화된＇ 모니터링&lt;/li&gt;
&lt;li&gt;모니터링 지표는 CloudWatchs Logs에 30일간 저장됨&lt;/li&gt;
&lt;li&gt;일반 모니터링과의 차이점은 Enhanced Monitoring은 인스턴스 내 에이전트를 통해 지표를 수집하는 반면, 일반 모니터링은 하이퍼바이저에서 수집 ( 최대 1초 단위 )&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;RDS vs DB in EC2&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;rds-vs-db-in-ec2&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#rds-vs-db-in-ec2&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;EC2 위에 데이터베이스를 직접 올리는 만큼 설정을 마음대로 변경할 수 있고, 커스터마이징 또한 가능&lt;/li&gt;
&lt;li&gt;RDS와는 반대로 백업과 패치 등 관리를 직접해야 함&lt;/li&gt;
&lt;li&gt;EC2에 설치하는 것이기에 SSH 접속 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Amazon DynamoDB&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;amazon-dynamodb&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#amazon-dynamodb&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Database/DyDB.png&#34; alt=&#34;RDS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;종합 관리형 NoSQL 데이터베이스 서비스로, 원할환 확장성과 예측 가능한 성능을 제공&lt;/li&gt;
&lt;li&gt;데이터 규모에 관계없이 데이터를 저장 및 검색하고, 어떤 수준의 요청 트래픽이라도 처리할 수 있는 데이터베이스 테이블의 생성이 가능&lt;/li&gt;
&lt;li&gt;배포가 단순하고 신속, 설계를 해서 데이터베이스의 적용까지 많은 시간이 소요되지 않음&lt;/li&gt;
&lt;li&gt;확장이 단순하고 신속, 단순한 인터페이스의 유리&lt;/li&gt;
&lt;li&gt;온 디맨드 백업기능 제공&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;DynamoDB의 특징&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dynamodb의-특징&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dynamodb%ec%9d%98-%ed%8a%b9%ec%a7%95&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;배포가 단순하고 신속&lt;/li&gt;
&lt;li&gt;확장이 단순하고 신속, 수백만 IOPS&lt;/li&gt;
&lt;li&gt;데이터는 자동으로 복제되어 있음&lt;/li&gt;
&lt;li&gt;빠르고 일관된 응답시간, SSD, 10밀리초 미만&lt;/li&gt;
&lt;li&gt;보조 인덱스를 통한 빠른 조회&lt;/li&gt;
&lt;li&gt;사용한만큼 지불, 저장소 및 프로비저닝된 처리용량&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Amazon ElastiCache&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;amazon-elasticache&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#amazon-elasticache&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Database/AEC.png&#34; alt=&#34;AEC&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Cache&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;cache&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#cache&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Cache는 CPU 칩 안에 들어가 있는 작은 메모리 ( 물리적 실체 )&lt;/li&gt;
&lt;li&gt;프로세서가 필요한 데이터가 있을 때마다 메인 메모리에 일일이 접근하여 속도가 지연되는 것을 막기 위해 자주 사용하는 데이터를 담아두는 곳&lt;/li&gt;
&lt;li&gt;즉 처리 속도 향상을 위해 존재하는 작은 칩이자 메모리&lt;/li&gt;
&lt;li&gt;L1,L2,L3로 나뉘며 숫자가 적을 수록 도달하는 속도가 빠름&lt;/li&gt;
&lt;li&gt;Cache는 CPU와 메모리 사이 뿐만 아니라, 메모리와 디스크 사이에서도 발생함&lt;/li&gt;
&lt;li&gt;후술할 In Memory Cache는 메모리와 디스크 사이의 Caching을 의미&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;In Memory Cache ( In Memory DataBase )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;in-memory-cache--in-memory-database-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#in-memory-cache--in-memory-database-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;데이터 처리 속도를 향상시키기 위한 메모리 기반의 DBMS&lt;/li&gt;
&lt;li&gt;메모리 위에 모든 데이터를 올려두고 사용하는 데이터베이스의 일종( ElastiCache가 AWS 카테고리에서 DB 부분에 있는 이유 )&lt;/li&gt;
&lt;li&gt;디스크에 최적화된 Database ( RDS 등 ) 에서 저장된 쿼리 결과나 자주 사용하는 데이터를 메모리에 적재하여 사용하는 것은 비효율적&lt;/li&gt;
&lt;li&gt;즉 모든 데이터를 메모리 위에 올려두어 굳이 디스크 기반의 데이터베이스에까지 이동하여 데이터를 가져와 속도가 저하되는 것을 막음&lt;/li&gt;
&lt;li&gt;데이터베이스의 데이터뿐만 아니라, 디스크, 세션, 기타 동적으로 생성된 데이터를 저장할 수 있음&lt;/li&gt;
&lt;li&gt;메모리 기반의 데이터베이스이기 때문에, 휘발성 메모리라는 단점이 존재하며 전원 공급 차단시 모든 데이터가 유실되고 할당된 메모리에 한해 저장 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;ElastiCache&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;elasticache&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#elasticache&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;AWS의 In Memory Cache Service&lt;/li&gt;
&lt;li&gt;Memcached와 Redis로 나뉨&lt;/li&gt;
&lt;li&gt;Memached, Redis 모두 비관계데이터베이스형(NosQL) 서비스이며, Key-value 기반임&lt;/li&gt;
&lt;li&gt;Memached, Redis 모두 이미 존재하는 서비스이며 AWS에서 사용가능하도록 구현한 것&lt;/li&gt;
&lt;li&gt;ElastiCache는 Node로 구성되어 서비스를 제공하며, Node는 EC2처럼 다양한 Type을 가지고 유형에 따라 다양한 메모리 크기를 가짐&lt;/li&gt;
&lt;li&gt;다양한 Type을 갖는 이유는 적은 양의 메모리가 필요할 경우, 작은 Type의 Node를 사용하여 비용을 적게 들게 하기 위함&lt;/li&gt;
&lt;li&gt;유형이 결정된 Node들은 ‘고정된’ 메모리 크기를 가지며, 각자의 DNS로 이루어진 엔드포인트를 보유함&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Memcache&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;memcache&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#memcache&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Cluster로 구성되어 있으며, Cluster 내에는 Node들이 존재하여 인 메모리 캐시로서의 역할을 담당함&lt;/li&gt;
&lt;li&gt;각 Node는 Type별로 메모리를 보유하며 서비스를 제공하며, 필요시 Node를 늘려 서비스 용량을 향상시킬 수 있음&lt;/li&gt;
&lt;li&gt;각 Node별로 AZ를 따로 둘 수 있지만, 장애 조치(Failover)가 불가능하고 복제본을 둘 수 없음&lt;/li&gt;
&lt;li&gt;Redis의 특징&lt;/li&gt;
&lt;li&gt;기본적으로 Cluster로 구성되지는 않지만, Cluster로 구성이 가능하며 Shard와 Node를 가지고 있음&lt;/li&gt;
&lt;li&gt;Shard는 여러 Node로 구성되며, 하나의 Node가 읽기/쓰기를 담당하고 나머지 Node는 복제본 역할을 함&lt;/li&gt;
&lt;li&gt;Cluster로 구성되지 않은 Redis는 하나의 Shard만을 가지지만, Cluster로 구성될 경우 다수의 Shard를 갖게 됨&lt;/li&gt;
&lt;li&gt;복제본을 가지므로, 장애조치(복제본을 기본 Node로 승격)가 가능하며 Multi-AZ 기능을 지원함&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Amazon Redshift&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;amazon-redshift&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#amazon-redshift&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Databases/Redshift.png&#34; alt=&#34;RDS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Redshift&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;redshift&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#redshift&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;PostgreSQL를 기반으로 하는 AWS의 Data Warehouse Service&lt;/li&gt;
&lt;li&gt;모든 데이터를 표준 SQL 혹은 BI 도구를 사용하여 효율적으로 분석할 수 있도록 지원&lt;/li&gt;
&lt;li&gt;대량 병렬처리(MPP)를 통해 복잡한 쿼리라도 빠른 속도로 실행하여 대용량 처리 가능&lt;/li&gt;
&lt;li&gt;열(Column) 단위 데이터 저장방식&lt;/li&gt;
&lt;li&gt;COPY 명령어를 통해 Amazon EMR, Amazon DynamoDB, S3로부터 데이터를 병렬 로드 가능&lt;/li&gt;
&lt;li&gt;Enhanced VPC Routing을 통해 클러스터와 VPC 외부의 COPY, UNLOAD 트래픽을 모니터링할 수 있음&lt;/li&gt;
&lt;li&gt;WLM(Workload Management)를 통해 사용자가 작업 부하 내 우선 순위를 유연하게 관리하도록 지원&lt;/li&gt;
&lt;li&gt;보존기간이 1일인 자동 백업을 지원하며, 최대 35일까지 설정 가능
단일 AZ 배포만을 지원함&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Redshift의 구성&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;redshift의-구성&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#redshift%ec%9d%98-%ea%b5%ac%ec%84%b1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;클러스터 :&lt;/strong&gt; Redshift의 핵심 요소로, 하나의 리더 노드와 다수의 컴퓨팅 노드를 가지고 있는 구성 요소&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;리더 노드 :&lt;/strong&gt; 클라이언트 프로그램과 일어나는 통신을 비롯해 컴퓨팅 노드간의 모든 통신/작업 관리&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;컴퓨팅 노드 :&lt;/strong&gt; 실제 작업을 수행하는 노드로, 각 노드마다 전용 CPU와 메모리 내장 디스크 스토리지를 따로 보유함&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Data Warehouse(DW)&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;data-warehousedw&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#data-warehousedw&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;하나의 통합된 데이터 저장공간으로서, 다양한 운영 환경의 시스템들로부터 데이터를 추출, 변환, 통합해서 요약한 데이터베이스&lt;/li&gt;
&lt;li&gt;데이터베이스가 관련 있는 업무 데이터는 잘 저장하나, 저장된 데이터들을 제대로 활용하지 못 하는 것에서 착안&lt;/li&gt;
&lt;li&gt;기본적으로 관계형 데이터베이스가 있는 상태를 가정하여 DW를 구성하며, 동영상이나 음악처럼 DB에 저장할 수 없는 파일도 필요한 부분을 추출하여 보여주어야 함&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;ETL(Extract, Tranform, Load)&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;etlextract-tranform-load&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#etlextract-tranform-load&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;데이터를 추출하고, 변형하여, (Data Warehouse에) 적재하는 과정을 일컫는 말&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;BI(Business Intelligence)&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;bibusiness-intelligence&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#bibusiness-intelligence&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;데이터 추출/통합/리포팅을 위한 기본도구 집합, DW에서 분석된 데이터를 통해 숨겨진 패턴을 찾아냄 == &amp;gt; ETL을 통해 뽑아낸 데이터를 DW에 적재하고, BI를 이용하여 분석하는 기본 과정을 거침&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Redshift vs RDS&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;redshift-vs-rds&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#redshift-vs-rds&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Redshift는 보고 및 분석에 사용되지만, RDS는 OLTP(온라인 트랜잭션) 워크로드에 사용&lt;/li&gt;
&lt;li&gt;Redshfit는 대용량 데이터 세트를 대상을 복합적인 분석 쿼리를 빠르게 실행하는 것에 목표를, RDS는 단일 행 트랜잭션에 목표를 둠&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Amazon Aurora&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;amazon-aurora&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#amazon-aurora&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Databases/Aurora.png&#34; alt=&#34;RDS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;클라우드에서 데이터베이스를 처음부터 설계하자는 생각에서 출발한 DB 서비스&lt;/li&gt;
&lt;li&gt;MySQL과 PostgreSQl과 호환이 가능&lt;/li&gt;
&lt;li&gt;각 AZ마다 2개의 데이터 복사본을 자동으로 유지하며, 에러를 스스로 찾아내고 복구&lt;/li&gt;
&lt;li&gt;Read Replica는 다른 DB 서비스와 달리 최대 15개 까지 가능하며, 백업과 스냅샷이 퍼포먼스에 영향을 주지 않음&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>AWS Storage</title>
      <link>https://mungops.github.io/system/aws/amazonwebservice/aws_storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mungops.github.io/system/aws/amazonwebservice/aws_storage/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;strong&gt;AWS Storage&lt;/strong&gt;&lt;/h1&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;S3 ( Simple Storage Service )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;s3--simple-storage-service-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#s3--simple-storage-service-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S3.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;웹 서비스 인터페이스( HTTP ) 를 이용하여 웹에서 언제 어디서나 원하는 양의 데이터를 저장하고 검색할 수 있는 스토리지&lt;/li&gt;
&lt;li&gt;버킷( Bucket )과 객체 ( Object )로 나뉘며, 저장하고자 하는 모든 요소는 하나의 객체로 저장되고, 객체를 담는 곳이 버킷&lt;/li&gt;
&lt;li&gt;S3 자체는 글로벌 서비스이지만 버킷을 생성 할 때에는 리전을 선택해야 함&lt;/li&gt;
&lt;li&gt;객체는 객체 데이터와 메타 데이터로 나뉘며, 각자의 고유한 URL을 가지며 해당 URL로 접속 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;버킷( Bucket )의 정의와 특징&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;버킷-bucket-의-정의와-특징&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%eb%b2%84%ed%82%b7-bucket-%ec%9d%98-%ec%a0%95%ec%9d%98%ec%99%80-%ed%8a%b9%ec%a7%95&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;객체를 담고 있는 구성 요소&lt;/li&gt;
&lt;li&gt;크기는 무제한, 리전을 지정하여 버킷을 생성해야 함&lt;/li&gt;
&lt;li&gt;버킷의 이름은 반드시 고유해야하며, 증복이 불가능&lt;/li&gt;
&lt;li&gt;한번 설정된 버킷의 이름은 다른 계정에서 사용불가&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;객체( Object ) 의 정의와 특징&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;객체-object--의-정의와-특징&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ea%b0%9d%ec%b2%b4-object--%ec%9d%98-%ec%a0%95%ec%9d%98%ec%99%80-%ed%8a%b9%ec%a7%95&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;S3에 업로드되는 1개의 데이터를 객체라 함&lt;/li&gt;
&lt;li&gt;키, 버전 ID, 값, 메타데이터 등으로 구성&lt;/li&gt;
&lt;li&gt;객체 하나의 최소 크기는 1(0) byte ~ 5TB&lt;/li&gt;
&lt;li&gt;스토리지 클래스, 암호화, 태그, 메타데이터, 객체 잠금 설정 가능&lt;/li&gt;
&lt;li&gt;객체의 크기가 매우 클 경우 멀티파트 업로드를 통해 신속하게 업로드 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;객체의 스토리지 클래스&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;객체의-스토리지-클래스&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ea%b0%9d%ec%b2%b4%ec%9d%98-%ec%8a%a4%ed%86%a0%eb%a6%ac%ec%a7%80-%ed%81%b4%eb%9e%98%ec%8a%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;객체의 접근빈도 및 저장기안에 따라 결정되는 객체의 특성&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Standard Type :&lt;/strong&gt; 클래스를 선택하지 않을 경우 선택되는 일반적인 클래스&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Strandard_IA(Ifrequent Access ) :&lt;/strong&gt; 자주 엑세스하지는 않지만 즉시 액세스할 수 있는 데이터여야하는 경우 선택되는 클래스&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;One Zone_iA :&lt;/strong&gt; Standard_IA와 기능은 동일하나 Standard_IA의 경우 세 곳의 AZ에 저장되는 것과 달리 한 군데의 AZ에만 저장되어 해당 AZ가 파괴될 경우 정보 손실 가능성 존재 ( 저장 요금이 적음 )&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Intelligent tiering :&lt;/strong&gt; 엑세스 빈도가 불규칙하여 빈도를 가늠하기 어려운 경우 선택되는 클래스&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Glancier :&lt;/strong&gt; 검색이 아닌 저장이 주용도인 스토리지로 저장요금이 위 클래스들보다 훨씬 저렴한, 다만 저장이 주용도이기 때문에 검색이 3~ 5시간이 소요&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Glacier Deep Archive :&lt;/strong&gt; 10년 이상 저장할 데이터를 저장하는 스토리지 클래스&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;S3 사용&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;s3-사용&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#s3-%ec%82%ac%ec%9a%a9&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;S3 생성&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;s3-생성&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#s3-%ec%83%9d%ec%84%b1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/Line/AWS.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h3&gt;1. S3를 선택합니다.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;1-s3를-선택합니다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#1-s3%eb%a5%bc-%ec%84%a0%ed%83%9d%ed%95%a9%eb%8b%88%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S32.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;2. S3 사용을 위해 버킷을 생성합니다.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;2-s3-사용을-위해-버킷을-생성합니다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#2-s3-%ec%82%ac%ec%9a%a9%ec%9d%84-%ec%9c%84%ed%95%b4-%eb%b2%84%ed%82%b7%ec%9d%84-%ec%83%9d%ec%84%b1%ed%95%a9%eb%8b%88%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S33.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;
&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S34.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;
&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S34-2.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;버킷 생성이 주의사항&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;버킷-생성이-주의사항&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%eb%b2%84%ed%82%b7-%ec%83%9d%ec%84%b1%ec%9d%b4-%ec%a3%bc%ec%9d%98%ec%82%ac%ed%95%ad&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;버킷 이름에 대문자사용이 불가능&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;버킷 이름에 특수문자 사용 불가능&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;버킷 이름이 중첩될 수 없음&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;퍼블릭 엑세스 차단을 위한 버킷설정&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;S3 사용자의 설정에 따라 엑세스를 차단&amp;amp; 허용 설정이 가능&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;3. Bucket의 생성되었습니다.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;3-bucket의-생성되었습니다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#3-bucket%ec%9d%98-%ec%83%9d%ec%84%b1%eb%90%98%ec%97%88%ec%8a%b5%eb%8b%88%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S35.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;4. 버킷을 선택하면 버킷을 사용할 수 있습니다.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;4-버킷을-선택하면-버킷을-사용할-수-있습니다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#4-%eb%b2%84%ed%82%b7%ec%9d%84-%ec%84%a0%ed%83%9d%ed%95%98%eb%a9%b4-%eb%b2%84%ed%82%b7%ec%9d%84-%ec%82%ac%ec%9a%a9%ed%95%a0-%ec%88%98-%ec%9e%88%ec%8a%b5%eb%8b%88%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S36.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;5. 버킷의 파일을 사용자의 옵션에 맞춰 업로드합니다.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;5-버킷의-파일을-사용자의-옵션에-맞춰-업로드합니다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#5-%eb%b2%84%ed%82%b7%ec%9d%98-%ed%8c%8c%ec%9d%bc%ec%9d%84-%ec%82%ac%ec%9a%a9%ec%9e%90%ec%9d%98-%ec%98%b5%ec%85%98%ec%97%90-%eb%a7%9e%ec%b6%b0-%ec%97%85%eb%a1%9c%eb%93%9c%ed%95%a9%eb%8b%88%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S37.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;
&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S37-2.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;
&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S37-3.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;
&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S37-4.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;6. 업로드가 완료되었습니다.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;6-업로드가-완료되었습니다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#6-%ec%97%85%eb%a1%9c%eb%93%9c%ea%b0%80-%ec%99%84%eb%a3%8c%eb%90%98%ec%97%88%ec%8a%b5%eb%8b%88%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S38.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;7. 업로드 파일을 선택하면, 퍼블릭 전환, 다운로드 링크 등의 기능을 사용가능합니다.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;7-업로드-파일을-선택하면-퍼블릭-전환-다운로드-링크-등의-기능을-사용가능합니다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#7-%ec%97%85%eb%a1%9c%eb%93%9c-%ed%8c%8c%ec%9d%bc%ec%9d%84-%ec%84%a0%ed%83%9d%ed%95%98%eb%a9%b4-%ed%8d%bc%eb%b8%94%eb%a6%ad-%ec%a0%84%ed%99%98-%eb%8b%a4%ec%9a%b4%eb%a1%9c%eb%93%9c-%eb%a7%81%ed%81%ac-%eb%93%b1%ec%9d%98-%ea%b8%b0%eb%8a%a5%ec%9d%84-%ec%82%ac%ec%9a%a9%ea%b0%80%eb%8a%a5%ed%95%a9%eb%8b%88%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S39-1.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;8. 권한이 없는 사용자가 링크로 접근하면 다음과 같은 오류가 발생됩니다.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;8-권한이-없는-사용자가-링크로-접근하면-다음과-같은-오류가-발생됩니다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#8-%ea%b6%8c%ed%95%9c%ec%9d%b4-%ec%97%86%eb%8a%94-%ec%82%ac%ec%9a%a9%ec%9e%90%ea%b0%80-%eb%a7%81%ed%81%ac%eb%a1%9c-%ec%a0%91%ea%b7%bc%ed%95%98%eb%a9%b4-%eb%8b%a4%ec%9d%8c%ea%b3%bc-%ea%b0%99%ec%9d%80-%ec%98%a4%eb%a5%98%ea%b0%80-%eb%b0%9c%ec%83%9d%eb%90%a9%eb%8b%88%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S39-2.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/Line/AWS2.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;윈도우 예약 작업과 S3 활용&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;윈도우-예약-작업과-s3-활용&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ec%9c%88%eb%8f%84%ec%9a%b0-%ec%98%88%ec%95%bd-%ec%9e%91%ec%97%85%ea%b3%bc-s3-%ed%99%9c%ec%9a%a9&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;윈도우 S3 연동&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;윈도우-s3-연동&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ec%9c%88%eb%8f%84%ec%9a%b0-s3-%ec%97%b0%eb%8f%99&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/Line/AWS.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;1. 연동을 위해 Bucket의 backup 폴더를 생성합니다.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;1-연동을-위해-bucket의-backup-폴더를-생성합니다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#1-%ec%97%b0%eb%8f%99%ec%9d%84-%ec%9c%84%ed%95%b4-bucket%ec%9d%98-backup-%ed%8f%b4%eb%8d%94%eb%a5%bc-%ec%83%9d%ec%84%b1%ed%95%a9%eb%8b%88%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S10.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;2. 계정 생성을 위해 IAM 서비스로 이동합니다.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;2-계정-생성을-위해-iam-서비스로-이동합니다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#2-%ea%b3%84%ec%a0%95-%ec%83%9d%ec%84%b1%ec%9d%84-%ec%9c%84%ed%95%b4-iam-%ec%84%9c%eb%b9%84%ec%8a%a4%eb%a1%9c-%ec%9d%b4%eb%8f%99%ed%95%a9%eb%8b%88%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S310.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mung0001.github.io/docs/cloud/images/AWS/aws_security/#aws-iam&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IAM이란&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;3. 사용자 추가를 선택하여 사용자의 옵션에 맞춰 새로운 사용자를 생성합니다.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;3-사용자-추가를-선택하여-사용자의-옵션에-맞춰-새로운-사용자를-생성합니다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#3-%ec%82%ac%ec%9a%a9%ec%9e%90-%ec%b6%94%ea%b0%80%eb%a5%bc-%ec%84%a0%ed%83%9d%ed%95%98%ec%97%ac-%ec%82%ac%ec%9a%a9%ec%9e%90%ec%9d%98-%ec%98%b5%ec%85%98%ec%97%90-%eb%a7%9e%ec%b6%b0-%ec%83%88%eb%a1%9c%ec%9a%b4-%ec%82%ac%ec%9a%a9%ec%9e%90%eb%a5%bc-%ec%83%9d%ec%84%b1%ed%95%a9%eb%8b%88%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S310-2.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;
&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S310-3.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;
&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S310-4.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;
&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S310-5.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;4. 사용자 생성이 완료되었습니다.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;4-사용자-생성이-완료되었습니다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#4-%ec%82%ac%ec%9a%a9%ec%9e%90-%ec%83%9d%ec%84%b1%ec%9d%b4-%ec%99%84%eb%a3%8c%eb%90%98%ec%97%88%ec%8a%b5%eb%8b%88%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h3&gt;사용자 생성 후, 연동을 위해 &lt;a href=&#34;https://docs.aws.amazon.com/ko_kr/cli/latest/userguide/cli-chap-install.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CLI&lt;/a&gt;를 설치합니다.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;사용자-생성-후-연동을-위해-cli를-설치합니다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ec%82%ac%ec%9a%a9%ec%9e%90-%ec%83%9d%ec%84%b1-%ed%9b%84-%ec%97%b0%eb%8f%99%ec%9d%84-%ec%9c%84%ed%95%b4-cli%eb%a5%bc-%ec%84%a4%ec%b9%98%ed%95%a9%eb%8b%88%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S310-6.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;
&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S310-7.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;5. 설치가 완료되면, cmd 창에서 configure를 입력 후, 다운받은 csv파일의 정보들을 입력합니다.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;5-설치가-완료되면-cmd-창에서-configure를-입력-후-다운받은-csv파일의-정보들을-입력합니다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#5-%ec%84%a4%ec%b9%98%ea%b0%80-%ec%99%84%eb%a3%8c%eb%90%98%eb%a9%b4-cmd-%ec%b0%bd%ec%97%90%ec%84%9c-configure%eb%a5%bc-%ec%9e%85%eb%a0%a5-%ed%9b%84-%eb%8b%a4%ec%9a%b4%eb%b0%9b%ec%9d%80-csv%ed%8c%8c%ec%9d%bc%ec%9d%98-%ec%a0%95%eb%b3%b4%eb%93%a4%ec%9d%84-%ec%9e%85%eb%a0%a5%ed%95%a9%eb%8b%88%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S311.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AWS Access Key ID : ex.csv 파일의 엑세스 ID 값&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;AWS Secret Access Key :ex.csv 파일의 보안 엑세스 키 값&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Default region name : region 이름으로 ap-northeast-2 입력&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Default output format : 포맷 형식으로 json을 입력&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;6. aws s3 sync [ 저장한 윈도우의 경로 ] s3 [ 저장될 버킷의 경로 ]를 입력합니다.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;6-aws-s3-sync--저장한-윈도우의-경로--s3--저장될-버킷의-경로-를-입력합니다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#6-aws-s3-sync--%ec%a0%80%ec%9e%a5%ed%95%9c-%ec%9c%88%eb%8f%84%ec%9a%b0%ec%9d%98-%ea%b2%bd%eb%a1%9c--s3--%ec%a0%80%ec%9e%a5%eb%90%a0-%eb%b2%84%ed%82%b7%ec%9d%98-%ea%b2%bd%eb%a1%9c-%eb%a5%bc-%ec%9e%85%eb%a0%a5%ed%95%a9%eb%8b%88%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h3&gt;aws s3 sync c:\backup s3://mybucketbucket/backup&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-s3-sync-cbackup-s3mybucketbucketbackup&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-s3-sync-cbackup-s3mybucketbucketbackup&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S312.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;
&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S312-2.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;7. 자동화를 위해 .bat 파일을 생성합니다.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;7-자동화를-위해-bat-파일을-생성합니다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#7-%ec%9e%90%eb%8f%99%ed%99%94%eb%a5%bc-%ec%9c%84%ed%95%b4-bat-%ed%8c%8c%ec%9d%bc%ec%9d%84-%ec%83%9d%ec%84%b1%ed%95%a9%eb%8b%88%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S313.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;8. bat 파일을 작업 스케줄러에 등록합니다.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;8-bat-파일을-작업-스케줄러에-등록합니다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#8-bat-%ed%8c%8c%ec%9d%bc%ec%9d%84-%ec%9e%91%ec%97%85-%ec%8a%a4%ec%bc%80%ec%a4%84%eb%9f%ac%ec%97%90-%eb%93%b1%eb%a1%9d%ed%95%a9%eb%8b%88%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S314.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S314-2.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S314-3.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S314-4.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;9. 등록이 완료되었습니다. 확인을 위해 실행을 클릭합니다.&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;9-등록이-완료되었습니다-확인을-위해-실행을-클릭합니다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#9-%eb%93%b1%eb%a1%9d%ec%9d%b4-%ec%99%84%eb%a3%8c%eb%90%98%ec%97%88%ec%8a%b5%eb%8b%88%eb%8b%a4-%ed%99%95%ec%9d%b8%ec%9d%84-%ec%9c%84%ed%95%b4-%ec%8b%a4%ed%96%89%ec%9d%84-%ed%81%b4%eb%a6%ad%ed%95%a9%eb%8b%88%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/S314-5.png&#34; alt=&#34;S3&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/Line/AWS2.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Amazon EFS ( Elastic File System )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;amazon-efs--elastic-file-system-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#amazon-efs--elastic-file-system-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/EFS.png&#34; alt=&#34;EFS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AWS 클라우드 서비스와 온프레미스 리소스에서 사용할 수 있는 탄력적인 완전 관리형 탄력적 NFS 파일 시스템&lt;/li&gt;
&lt;li&gt;애플리케이션을 중단하지 않고 온디맨드 방식으로 구성&lt;/li&gt;
&lt;li&gt;파일의 추가/ 제거 함에 따라 자동적으로 용량의 확장 및 축소&lt;/li&gt;
&lt;li&gt;데이터 일관성 및 보안체계 제공&lt;/li&gt;
&lt;li&gt;네트워크 파일 시스템( NFS v4 )를 사용하는 파일 스토리지 서비스&lt;/li&gt;
&lt;li&gt;VPC 내에서 생성되며, 파일 시스템 인터페이스를 통해 EC2에 엑세스&lt;/li&gt;
&lt;li&gt;수천 개의 EC2에서 동시에 엑세스 가능하며, 탄력적으로 파일을 추가하고 삭제함에 따라 자동으로 Auto Scaling 가능, 즉 미리 크기를 프로비저닝 할 필요가 없음&lt;/li&gt;
&lt;li&gt;페타바이트단위 데이터까지 확장 가능&lt;/li&gt;
&lt;li&gt;최대 1천개의 파일 시스템 생성&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;스토리지 클래스&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;스토리지-클래스&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ec%8a%a4%ed%86%a0%eb%a6%ac%ec%a7%80-%ed%81%b4%eb%9e%98%ec%8a%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Standard Class :&lt;/strong&gt; 자주 액세스하는 파일을 저장하는 데 사용하는 클래스&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Infrequent Access( IA ) Class :&lt;/strong&gt; 저장기간이 길지만 자주 액세스하지 않는 파일을 저장하기 위한 클라스&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;가용성&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;가용성&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ea%b0%80%ec%9a%a9%ec%84%b1&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;여러 가용영역에서 엑세스 가능&lt;/li&gt;
&lt;li&gt;여러 가용영역에 중복 저장되기 때문에 하나의 가용영역이 파괴되더라도 다른 AZ에서 서비스 제공 가능&lt;/li&gt;
&lt;li&gt;IPSEC VPN 또는 Direct Connect를 통해 On-premise에서 접속 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;성능 모드/ 처리량 모드&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;성능-모드-처리량-모드&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ec%84%b1%eb%8a%a5-%eb%aa%a8%eb%93%9c-%ec%b2%98%eb%a6%ac%eb%9f%89-%eb%aa%a8%eb%93%9c&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;성능 모드에 있어서 대부분의 파일시스템에 Bursting Mode를 권장하지만 처리량이 많을 경우, Provisioned Mode를 권장&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;수명 주기 관리&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;수명-주기-관리&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ec%88%98%eb%aa%85-%ec%a3%bc%ea%b8%b0-%ea%b4%80%eb%a6%ac&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Standard Class: 자주 액세스하는 클래스&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;파일시스템 정책&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;파일시스템-정책&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ed%8c%8c%ec%9d%bc%ec%8b%9c%ec%8a%a4%ed%85%9c-%ec%a0%95%ec%b1%85&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;여러 가용영역에서 엑세스 가능&lt;/li&gt;
&lt;li&gt;여러 가용영역에 중복 저장되기 때문에 하나의&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Amazon Glacier&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;amazon-glacier&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#amazon-glacier&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/Glacier.png&#34; alt=&#34;Glacier&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Glacier는 자주 사용하지 않는 데이터로 &amp;ldquo;Cold Data&amp;quot;에 최적화된 스토리지 서비스&lt;/li&gt;
&lt;li&gt;데이터 보관 및 백업을 목적으로 보안 기능과 함께 내구성 있는 저장 공간을 제공하는 매우 저렴한 스토리지 서비스&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Glacier의 종류&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;glacier의-종류&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#glacier%ec%9d%98-%ec%a2%85%eb%a5%98&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;아카이브
&lt;ul&gt;
&lt;li&gt;Glacler에 데이터가 저장되는 최소 단위, 하나의 파일&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;볼트
&lt;ul&gt;
&lt;li&gt;Glacler에 생성할 수 있는 최상위 디렉토리, 볼트는 리전별로 생성해야 하며, 각 리전별로 최대 1000개까지 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;볼트 인벤토리
&lt;ul&gt;
&lt;li&gt;볼트에 저장된 아카이브의 목록과 크기, 생성 날짜 등 아카이브 정보, 24시간에 한 번씩 업데이트&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Storage Gateway&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;storage-gateway&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#storage-gateway&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/Storage_Gateway.png&#34; alt=&#34;SG&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On-premise 환경에서 Cloud 상의 Storage를 지원할 수 있게 하는 하이브리드 스토리지&lt;/li&gt;
&lt;li&gt;이름이 Storage ‘Gateway’인 이유는 Storage Gateway 자체가 스토리지의 역할을 하는 것이 아닌 스토리지( S3 )의 Gateway 역할을 하기 때문&lt;/li&gt;
&lt;li&gt;Volume Gateway의 Stored Volume을 제외하고 나머지 유형은 EC2를 Gateway로 활용하여 Mount Point로 활용 가능&lt;/li&gt;
&lt;li&gt;모든 Storage Gateway는 말 그대로 ‘Gateway‘를 생성해야 함
&lt;ul&gt;
&lt;li&gt;그 대상은 EC2 혹은 하드웨어 어플라이언스가 해당될 수 있음&lt;/li&gt;
&lt;li&gt;EC2의 공인 IP를 Mount point로 지정하여 외부 네트워크에서 연결 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;일반 PC에 마운트하여 사용하는 둥, 다양한 용도로 사용 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;File Gateway&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;file-gateway&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#file-gateway&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;FNFS와 SMB를 지원하는 Storage Gateway 유형&lt;/li&gt;
&lt;li&gt;S3를 스토리지로 사용하며, Gateway( EC2 등 )을 통해 S3에 데이터를 저장하고 이를 직접 S3에서 엑세스 할 수 있음&lt;/li&gt;
&lt;li&gt;하나의 파일을 하나의 오브젝트로 관리됨&lt;/li&gt;
&lt;li&gt;S3에 오브젝트로 관리되는 만큼, S3의 다른 기능을 사용할 수 있음&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Volume Gateway&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;volume-gateway&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#volume-gateway&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;iSCSI를 지원하는 Storage Gateway 유형&lt;/li&gt;
&lt;li&gt;두 가지 유형으로 나뉨
&lt;ul&gt;
&lt;li&gt;Cached Volume: S3를 기본 데이터 스토리로 사용하되, 자주 엑세스하는 데이터를 온프레미스 스토리지 게이트웨이의 캐시 및 업로드 버퍼 스토리지에 보관&lt;/li&gt;
&lt;li&gt;Stored Volume: On-premise 스토리지를 기본 데이터 스토리지로 사용하고, 해당 데이터를 EBS Snapshot 형식으로 S3에 비동기 백업을 실시&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Tape Gateway&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;tape-gateway&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#tape-gateway&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;VTL ( Vitual tape Library )를 지원하는 Storage Gateway&lt;/li&gt;
&lt;li&gt;가상 테이프데이터는 S3나 S3 Glacier에 저장될 수 있음&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;EBS ( Elastic Block Stroe )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;ebs--elastic-block-stroe-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#ebs--elastic-block-stroe-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Storage/EBS.png&#34; alt=&#34;EBS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EBS 지원 EC2가 갖는 블록 형태의 스토리지&lt;/li&gt;
&lt;li&gt;애플리케이션의 기본 스토리지로 쓰거나 시스템 드라이브용으로 쓰기 적합&lt;/li&gt;
&lt;li&gt;인스턴스 생성 시 루트 디바이스 볼륨이 생성되며 사용 중에는 언마운트할 수 없음, 추가로 여러 볼륨의 마운트가 가능하며, 추가볼륨에 대해서는 사용중이라도 마운트/ 언마운트가 가능&lt;/li&gt;
&lt;li&gt;EBS를 특정 AZ에서 생성하더라도 다른 AZ의 인스턴스에 즉시 붙일 수 있음&lt;/li&gt;
&lt;li&gt;인스턴스 스토어 볼륨과는 달리 EBS 기반 인스턴스는 중지 / 재시작이 가능&lt;/li&gt;
&lt;li&gt;사용중인 EBS더라도 볼륨 유형과 사이즈를 변경할 수 있음( 사이즈의 축소는 불가 )&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;EBS의 볼륨 유형&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;ebs의-볼륨-유형&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#ebs%ec%9d%98-%eb%b3%bc%eb%a5%a8-%ec%9c%a0%ed%98%95&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;범용 SSD( gp2 ): 시스템 부트 사용 가능, 대부분의 워크로드에서 사용&lt;/li&gt;
&lt;li&gt;프로비져닝된 IOPS SSD( io1 ): 지속적인 IOPS 성능이나 16.000 IOPS 이상의 볼륨당 처리량을 필요로 하는 경우 적합 ( DB 워크로드 )&lt;/li&gt;
&lt;li&gt;처리량 최적회돤 HDD( st1 ): 시스템 부트 사용 불가능, IOPS가 아닌 처리량을 기준으로 하며 자주 엑세스하는 워크로드에 적합한 저비용 HDD 볼륨, 빅데이터나 데이터 웨어 하우스에 사용&lt;/li&gt;
&lt;li&gt;Cold HDD( sc1 ): 시스템 부트 사용 불가능, 자주 엑세스하지 않는 대용량 데이터 처리에 적합, 스토리지 비용이 최대한 낮아야 할 경우 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;
      </description>
    </item>
    
    <item>
      <title>AWS Network</title>
      <link>https://mungops.github.io/system/aws/amazonwebservice/aws_network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mungops.github.io/system/aws/amazonwebservice/aws_network/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;strong&gt;AWS Network&lt;/strong&gt;&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Amazon VPC ( Virtual Private Cloud )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;amazon-vpc--virtual-private-cloud-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#amazon-vpc--virtual-private-cloud-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/VPC/VPC.png&#34; alt=&#34;VPC&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AWS 상에 프라이빗 네트워크 공간을 구축할 수 있는 서비스&lt;/li&gt;
&lt;li&gt;VPC를 이용하면 논리적인 네트워크 분리가 가능하고 라우팅 테이블과 각종 게이트웨이의 설정이 가능&lt;/li&gt;
&lt;li&gt;AWS의 계정 전용 가상 네트워크 서비스&lt;/li&gt;
&lt;li&gt;VPC 내에서 각종 리소스 ( EC2, RDS, ELB 등 )을 시작할 수 있으며 다른 가상 네트워크와 논리적으로 분리되어 있음&lt;/li&gt;
&lt;li&gt;S3, Cloudfront 등은 다른 VPC 서비스로 VPC 내에서 생성되지 않음&lt;/li&gt;
&lt;li&gt;각 Region 별로 VPC 가 다수 존재할 수 있음&lt;/li&gt;
&lt;li&gt;VPC 하나의 사설 IP 대역을 보유하고, 서브넷을 생성하며 사설IP 대역 일부를 나누어 줄 수 있음&lt;/li&gt;
&lt;li&gt;허용된 IP 블록 크기는 /16( IP 65536개 )- / 28 (IP 16개 )&lt;/li&gt;
&lt;li&gt;권고하는 VPC CIDR 블록 ( 사설 IP 대역과 동일 )&lt;/li&gt;
&lt;li&gt;10.0.0.0- 10.255.255.255( 10.0.0.0/8 )&lt;/li&gt;
&lt;li&gt;172.16.0.0- 172.31.255.255( 172.16.0.0/12 )&lt;/li&gt;
&lt;li&gt;192.168.0.0- 192.168.255.255( 192.168.0.0/16 )&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Region&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;region&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#region&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;리전이란 AWS가 서비스를 제공하는 거점 ( 국가와 지역 )을 나타냅니다. 이는 모두 같은 방법 ( AWS 매니지먼트 콘솔, SDK, CLI )로 사용이 가능하며, 이를 통해 해외의 특정 서비스에 인프라 구축이 필요할 경우 큰 장점이 될 수 있음.&lt;/li&gt;
&lt;li&gt;AWS에서 사용하는 일종의 IDC의 집합으로 거의 모든 클라우드 서비스가 탑재되는 것으로 다수의 Availability Zone( 가용영역 )으로 구성됨&lt;/li&gt;
&lt;li&gt;한 곳의 AZ의 기능이 마비되어도 다른 AZ가 기능을 수행&lt;/li&gt;
&lt;li&gt;전 세계 주요 대도시에는 분포되어있음&lt;/li&gt;
&lt;li&gt;AWS 사용자는 각 Region 마다 별도의 클라우드 망을 구축할 수 있음&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Availability zone&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;availability-zone&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#availability-zone&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;가용 영역은 데이터 센터와 같은 의미라고 할 수 있습니다. 중국을 제외한 각각의 리전에는 2개 이상의 AZ가 존재하며, AWS 사용자가 원하는 AZ를 선택해서 시스템을 구축하는 것이 가능합니다. 즉, On Premise 구성으로 구현하기 힘든 여러 개의 데이터 센터를 사용한 시스템 구성 ( 한 국가 내부의 DR ) 구성 등을 쉽게 구현할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;VPC Peering&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;vpc-peering&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#vpc-peering&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;VPC 간의 트래픽을 전송하기 위한 기능&lt;/li&gt;
&lt;li&gt;Source VPC와 같은 / 다른 리전의 VPC를 Destination으로 선택하여 Peering 요청을 보낸 후, 수락시 Peering 가능&lt;/li&gt;
&lt;li&gt;요청과 수락이 필요한 이유는 다른 계정의 VPC도 연결 가능하기 때문&lt;/li&gt;
&lt;li&gt;Peering 생성 후 라우팅 테이블에 해당 peering을 집어넣으면 통신 시작&lt;/li&gt;
&lt;li&gt;VPC peering은 Transit Routing 불가 ( 재가의 VPC가 하나의 VPC를 통해 통신하는 것 )&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;VPC Endpoint&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;vpc-endpoint&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#vpc-endpoint&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;VPC 내 요소들과 비 VPC 서비스( S3, CloudWatch, Athena 등 )을 외부인터넷을 거치지 않고 아마존 내부 백본 네트워크를 통해 연결하는 방법&lt;/li&gt;
&lt;li&gt;그러므로 후술한 Direct Connect와 같은 전용선 서비스나 VPN, 인터넷 게이트웨이와 같은 외부 연결이 되어 있지 않는 서브넷에서 아마존의 여러 서비스를 연결가능&lt;/li&gt;
&lt;li&gt;간단히 말하면 아마존 서비스 전용선&lt;/li&gt;
&lt;li&gt;VPC 엔드포인트에는 Interface Endpoint, Gateway Endpoint 두 종류가 존재&lt;/li&gt;
&lt;li&gt;Gateway Endpoint는 S3와 Dynamo DB만 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Subnet&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;subnet&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#subnet&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;VPC 내 생성된 분리된 네트워크로 하나의 서브넷은 하나의 AZ ( Avaiability Zone ) 에 연결&lt;/li&gt;
&lt;li&gt;VPC가 가지고 있는 사설 IP 범위 내에서 ‘서브넷’을 쪼개어 사용가능&lt;/li&gt;
&lt;li&gt;실직적으로 리소스들을 이 서브넷에서 생성이 되며 사설 IP를 기본적으로 할당받고 필요에 따라 공인 IP를 할당받음&lt;/li&gt;
&lt;li&gt;하나의 서브넷은 하나의 라우팅 테이블과 하나의 NACL( Network ACL ) 을 가짐&lt;/li&gt;
&lt;li&gt;서브넷에서 생성되는 리소스에 공인 IP 자동할당 여부를 설정할 수 있음&lt;/li&gt;
&lt;li&gt;이 기능을 통해 Public Subnet과 Private Subnet을 만들어 커스터마이징 가능&lt;/li&gt;
&lt;li&gt;서브넷 트래픽이 후술할 인터넷 게이트웨이로 라우팅이 되는 경우 해당 서브넷을 Public Subnet, 그렇지 않은 서브넷의 경우 Private Subnet이라 함&lt;/li&gt;
&lt;li&gt;각 서브넷의 CIDR 블록에서 4개의 IP 주소와 마지막 IP 주소는 예약 주소로 사용자가 사용할 수 없음, 예를 들어 서브넷 주소가 172.16.1.0/24일 경우&lt;/li&gt;
&lt;li&gt;172.16.1.0: 네트워크 주소 ( Network ID )&lt;/li&gt;
&lt;li&gt;172.16.1.1: VPC Router용 예약 주소 ( Gateway )&lt;/li&gt;
&lt;li&gt;172.16.1.2: DNS 서버의 IP주소&lt;/li&gt;
&lt;li&gt;172.16.1.3: 향 후 사용할 예약 주소&lt;/li&gt;
&lt;li&gt;172.16.1.255: 네트워크 브로드캐스트 주소&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;VPN ( Virtual Private Network )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;vpn--virtual-private-network-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#vpn--virtual-private-network-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;AWS의 IPSEC VPN 서비스&lt;/li&gt;
&lt;li&gt;이 VPN을 통해 AWS와 On-premise의 VPN을 연결하는 것이 가능&lt;/li&gt;
&lt;li&gt;고객 측 공인 IP를 뜻하는 ‘Customer Gateway’와 AWS 측 게이트웨이인 ‘Virtual Private Gateway’ 생성 후 터널을 생성하면 사용 가능&lt;/li&gt;
&lt;li&gt;반드시 VPC에서 VPN 터널 쪽으로 라우팅을 생성해야 함&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Direct Connect&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;direct-connect&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#direct-connect&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;AWS의 데이터센터 및 오피스 네트워크와의 전용선 서비스&lt;/li&gt;
&lt;li&gt;표준 이더네세 광섬유 케이블을 이용하여 케이블 한쪽을 사용자 내부 네트워크의 라우터에 연결하고 한 쪽을 Direct Connect 라우터에 연결하여 내부 네트워크 AWS VPC를 연결&lt;/li&gt;
&lt;li&gt;보통 On-premise의 네트워크와 VPC를 연결할 때 사용&lt;/li&gt;
&lt;li&gt;VPN보다 더 안전하고 빠른 속도를 보장 받고 싶을 때 사용 ( 백업 등 )&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/ko/directconnect/partners/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;전용선 열결&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;&lt;a href=&#34;&#34; &gt;VPC 사용한 Public Subnet&amp;amp; Private Subnet 생성 실습&lt;/a&gt;&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;vpc-사용한-public-subnet-private-subnet-생성-실습&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#vpc-%ec%82%ac%ec%9a%a9%ed%95%9c-public-subnet-private-subnet-%ec%83%9d%ec%84%b1-%ec%8b%a4%ec%8a%b5&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Amazon CloudFront&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;amazon-cloudfront&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#amazon-cloudfront&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Network/&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;.html, .css, .js 및 이미지 파일과 같은 정적 및 동적 웹 콘텐츠를 사용자에게 더 빨리 배포하도록 지원하는 웹 서비스&lt;/li&gt;
&lt;li&gt;전 세계에 배치된 Edge location을 이용하여 효율적인 컨텐츠 배포 구조를 제공하는 것&lt;/li&gt;
&lt;li&gt;Cloud Front는 HTTP/ HTTPS를 이용하여 S3 및 ELB, EC2, 외부 서버 등을 캐시하고 보다 빠른 속도로 콘텐츠를 전달하는 캐시 서버&lt;/li&gt;
&lt;li&gt;Distribution은 Edge Location의 집합을 의미&lt;/li&gt;
&lt;li&gt;Edge Location은 주변 Origin Server의 콘텐츠를 Edge Location에 캐싱하고 각 Edge Location 간 공유를 통해 콘텐츠를 전달&lt;/li&gt;
&lt;li&gt;S3, ELB, EC2 등의 AWS 서비스뿐만 아니라 외부의 서버도 캐싱 가능 ( Custom Orgin )&lt;/li&gt;
&lt;li&gt;TTL을 조절하여 캐시 주기를 통제할 수 있음&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS Direct Connect&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-direct-connect&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-direct-connect&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Network/ADC.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;온 프레미스에서 AWS로 전용 네트워크 연결을 쉡게 설정할 수 있는 클라우드 서비스 솔루션&lt;/li&gt;
&lt;li&gt;AWS와 사용자 데이터 센터, 사무실 등의 환경 사이에 프라이빗 연결이 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Direct Connect의 이점&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;direct-connect의-이점&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#direct-connect%ec%9d%98-%ec%9d%b4%ec%a0%90&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;대역폭 비용 감소&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;대역폭 사용량이 많은 워크로드를 AWS에서 실행하려는 경우, AWS에서는 데이터를 직접 송수신하므로, 인터넷 서비스의 대한 의존도를 줄일 수 있음&lt;/li&gt;
&lt;li&gt;전용 연결을 통해 전송되는 데이터 요금은 인터넷 데이터 전송 요금이 ㅇ닌 보다 저렴한 AWS Direct Connect 데이터 전송 요금으로 부과되어짐&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;일관된 네트워크 성능&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;데이터와 데이터의 라우팅 방식이 선택되면 인터넷 기반 연결에서 효율적인 네트워크 환경의 제공이 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;모든 AWS 서비스와 호환 가능&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AWS Direct Connect는 네트워크 서비스의 일종으로, 인터넷을 통해 액세스 할 수 있는 모든 AWS 서비스와 연동&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;AMAZON VPC로 프라이빗 연결&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AWS Direct Connect를 사용하여 온프레미스 네트워크에서 직접 Amazon VPC로 프라이빗 가상 인터페이스를 설정함으로써 네트워크와 VPC 간에 네트워크 연결을 제공할 수 있음&lt;/li&gt;
&lt;li&gt;여러 가상 인터페이스를 사용하면 네트워크 격리를 유지하면서 여러 VPC 프라이빗 연결을 설정할 수 있음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;탄력성&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AWS Direct Connect를 사용하면 요구 사항에 맞게 연결을 용량을 손쉽게 조정이 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;간편성&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AWS Direct Connect는 직접 설치하는 것이 아닌, 설정하는 것으로 간편함&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS Route 53&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-route-53&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-route-53&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/53/53.png&#34; alt=&#34;DNS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AWS의 DNS 서비스 ( 도메인 등록, DNS 라우팅, Health check )&lt;/li&gt;
&lt;li&gt;도메인 등록시 약 12.000원 정도 지불해야 하며, 최대 3일 정도 걸림&lt;/li&gt;
&lt;li&gt;해당 도메인을 AWS 내 서비스 ( EC2, ELB, S3 등 ) 와 연결 할 수 있으며 AWS 외 요소들과도 연결 가능&lt;/li&gt;
&lt;li&gt;도메인 생성 후 레코드 세트를 생성하여 하위 도메인을 등록할 수 있음&lt;/li&gt;
&lt;li&gt;레코드 세트 등록시에는 IP 주소, 도메인, ‘Alias’ 등을 지정하여 쿼리를 라우팅할 수 있음&lt;/li&gt;
&lt;li&gt;도메인 레지스트라 서비스를 통해 도메인 구매부터 정보 설정까지 Route 53으로 한번에 관리가 가능합니다.&lt;/li&gt;
&lt;li&gt;장애 허용 아케텍처를 통해 시스템에 이상이 발생한 경우, 일시적으로 다른 서버로 전환하는 것이 가능합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
  
&lt;/blockquote&gt;
&lt;h3&gt;&lt;strong&gt;DNS ( Domain Name System )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dns--domain-name-system-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dns--domain-name-system-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/53/DNS.gif&#34; alt=&#34;DNS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DNS란 도메인네임서버를 일컫으며, 인터넷은 서버들을 유일하게 구분할 수 있는 IP주소 체계를 보다 인간이 읽게 쉽게 하기 위해 계발되었다.&lt;/li&gt;
&lt;li&gt;흔히 우리가 알고 있는 naver.com, google.com, daum.net 모두 DNS이다.&lt;/li&gt;
&lt;li&gt;AWS에서는 Route 53을 활용해 도메인 서비스를 지원한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Route 53의 라우팅 정책&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;route-53의-라우팅-정책&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#route-53%ec%9d%98-%eb%9d%bc%ec%9a%b0%ed%8c%85-%ec%a0%95%ec%b1%85&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Simple :&lt;/strong&gt; 동일 레코드 내에 다수의 IP를 지정하여 라우팅 가능, 값을 다수 지정한 경우 무작위로 반환함&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Weighted :&lt;/strong&gt; Region 별 부하 분산 가능, 각 가중치를 가진 동일한 이름의 A 레코드를 만들어 IP를 다르게 줌&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Latency-based :&lt;/strong&gt; 지연 시간이 가장 적은, 즉 응답시간이 가장 빠른 리전으로 쿼리를 요청&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Failover :&lt;/strong&gt; A/S 설정에서 사용됨, Main과 DR로 나누어 Main 장애시 DR로 쿼리&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Geolocation&lt;/strong&gt; : 각 지역을 기반으로 가장 가까운 리전으로 쿼리 수행, 레코드 생성시 지역을 지정할 수 있음&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Geo-proximity&lt;/strong&gt; : Traffic flow를 이용한 사용자 정의 DNS 쿼리 생성 가능&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-value answer :&lt;/strong&gt; 다수의 IP를 지정한다는 것은 simpl와 비슷하지만 health check가 가능 ( 실패시 자동 Failover )&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;AWS Route 사용방법&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-route-사용방법&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-route-%ec%82%ac%ec%9a%a9%eb%b0%a9%eb%b2%95&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h3&gt;&lt;strong&gt;AWS 서비스에 route를 검색 후 Route 53을 선택한다.&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-서비스에-route를-검색-후-route-53을-선택한다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-%ec%84%9c%eb%b9%84%ec%8a%a4%ec%97%90-route%eb%a5%bc-%ea%b2%80%ec%83%89-%ed%9b%84-route-53%ec%9d%84-%ec%84%a0%ed%83%9d%ed%95%9c%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/53/DNS.png&#34; alt=&#34;DNS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Route 53의 원하는 서비스를 선택한다.&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;route-53의-원하는-서비스를-선택한다&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#route-53%ec%9d%98-%ec%9b%90%ed%95%98%eb%8a%94-%ec%84%9c%eb%b9%84%ec%8a%a4%eb%a5%bc-%ec%84%a0%ed%83%9d%ed%95%9c%eb%8b%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/53/DNS2.png&#34; alt=&#34;DNS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;각 서비스의 간략한 설명&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;각-서비스의-간략한-설명&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ea%b0%81-%ec%84%9c%eb%b9%84%ec%8a%a4%ec%9d%98-%ea%b0%84%eb%9e%b5%ed%95%9c-%ec%84%a4%eb%aa%85&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;도메인 등록&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;도메인-등록&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%eb%8f%84%eb%a9%94%ec%9d%b8-%eb%93%b1%eb%a1%9d&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/53/DNS3.png&#34; alt=&#34;DNS&#34; loading=&#34;lazy&#34; /&gt;
&lt;img src=&#34;https://mungops.github.io/images/AWS/53/DNS3-1.png&#34; alt=&#34;DNS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;단순 도메인을 구입하여 등록한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;트래픽 흐름 처리&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;트래픽-흐름-처리&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ed%8a%b8%eb%9e%98%ed%94%bd-%ed%9d%90%eb%a6%84-%ec%b2%98%eb%a6%ac&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/53/DNS4.png&#34; alt=&#34;DNS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;트래픽 처리 등의 룰을 추가한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;DNS 관리&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;dns-관리&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#dns-%ea%b4%80%eb%a6%ac&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/53/DNS5.png&#34; alt=&#34;DNS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;호스트 도메인을 등록한다&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;모니터링 서비스는 DNS 흐름 프로세스를 모니터링 하는 서비스&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;모니터링-서비스는-dns-흐름-프로세스를-모니터링-하는-서비스&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a7%81-%ec%84%9c%eb%b9%84%ec%8a%a4%eb%8a%94-dns-%ed%9d%90%eb%a6%84-%ed%94%84%eb%a1%9c%ec%84%b8%ec%8a%a4%eb%a5%bc-%eb%aa%a8%eb%8b%88%ed%84%b0%eb%a7%81-%ed%95%98%eb%8a%94-%ec%84%9c%eb%b9%84%ec%8a%a4&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;blockquote&gt;
  
&lt;/blockquote&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;AWS 콘솔 SSL/ TLS 설치&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-콘솔-ssl-tls-설치&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-%ec%bd%98%ec%86%94-ssl-tls-%ec%84%a4%ec%b9%98&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;AWS 서비스에서 certificate 검색&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-서비스에서-certificate-검색&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-%ec%84%9c%eb%b9%84%ec%8a%a4%ec%97%90%ec%84%9c-certificate-%ea%b2%80%ec%83%89&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Se/ST.png&#34; alt=&#34;ST&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;인증서를 만들 것인지 혹은 사설 인증기관을 사용할 것인지를 선택&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;인증서를-만들-것인지-혹은-사설-인증기관을-사용할-것인지를-선택&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ec%9d%b8%ec%a6%9d%ec%84%9c%eb%a5%bc-%eb%a7%8c%eb%93%a4-%ea%b2%83%ec%9d%b8%ec%a7%80-%ed%98%b9%ec%9d%80-%ec%82%ac%ec%84%a4-%ec%9d%b8%ec%a6%9d%ea%b8%b0%ea%b4%80%ec%9d%84-%ec%82%ac%ec%9a%a9%ed%95%a0-%ea%b2%83%ec%9d%b8%ec%a7%80%eb%a5%bc-%ec%84%a0%ed%83%9d&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Se/ST2.png&#34; alt=&#34;ST&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;프로비저닝이 선택할 경우&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;프로비저닝이-선택할-경우&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ed%94%84%eb%a1%9c%eb%b9%84%ec%a0%80%eb%8b%9d%ec%9d%b4-%ec%84%a0%ed%83%9d%ed%95%a0-%ea%b2%bd%ec%9a%b0&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Se/ST3.png&#34; alt=&#34;ST&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;기존의 다른 업체에서 이미 발급받은 경우 Certificate Manager을 통해 등록이 가능하며, 무료로 발급도 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;적용시킬 도메인 이름 선택&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;적용시킬-도메인-이름-선택&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ec%a0%81%ec%9a%a9%ec%8b%9c%ed%82%ac-%eb%8f%84%eb%a9%94%ec%9d%b8-%ec%9d%b4%eb%a6%84-%ec%84%a0%ed%83%9d&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Se/ST4.png&#34; alt=&#34;ST&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; 
&lt;img src=&#34;https://mungops.github.io/images/AWS/Se/ST5.png&#34; alt=&#34;ST&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DNS 검증 :&lt;/strong&gt; Certificate Manager에서 제시하는 특정 레코드를 추가해서 본임임을 인증&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;이메일 검증 :&lt;/strong&gt; 해당 도메인의 관리자 계정으로 이메일을 보내서 본임임을 인증, 이 방법을 이용하기 위해서는 해당 도메인의 메일 서버에 연동되어 있어야 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;검증방법 선택&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;검증방법-선택&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ea%b2%80%ec%a6%9d%eb%b0%a9%eb%b2%95-%ec%84%a0%ed%83%9d&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Se/ST6.png&#34; alt=&#34;ST&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;요청이 완료되면 해당 도메인에 다음과 같은 이름과 값으로 CNAME 기록을 추가 해야 하며, AWS가 아닌 업체를 통해서 했다면 해당 업체의 사이트에서 레코드를 추가하면 되며, Route 53을 통해 자동으로 레코드 생성이 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;발급한 인증서를 로드 밸런서의의 기존에 생성했던 리스너를 추가시킨 후, 인증서를 추가하면 추가가 완료된 것을 확인할 수 있으며, http://가 아닌 https:// 접속이 가능한 것을 확인할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;
      </description>
    </item>
    
    <item>
      <title>AWS Migrate</title>
      <link>https://mungops.github.io/system/aws/amazonwebservice/aws_migrate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mungops.github.io/system/aws/amazonwebservice/aws_migrate/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;strong&gt;AWS Migrate&lt;/strong&gt;&lt;/h1&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;AWS Application Discovery Service&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-application-discovery-service&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-application-discovery-service&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Mrgate/&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS Application Discovery Service는 서버로부터 구성, 사용 및 동작 데이터를 수집하여 제공함으로써 워크로를 효율적 관리를 도와주는 서비스&lt;/li&gt;
&lt;li&gt;기업의 고객이 사내 데이터 센터에 대한 정보를 수집하여 마이그레이션 프로젝트를 계획하는 데 도움을 줌&lt;/li&gt;
&lt;li&gt;데이터 센터 마이그레이션을 계획하는 작업에는 상호 의존성이 높은 수천 개의 워크로드가 수반 되어지는 짐&lt;/li&gt;
&lt;li&gt;수집된 데이터는 AWS Application Discovey Service 데이터 스토어에 암호화된 형태로 보관되어짐&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;AWS Application Discovery Service의 이점&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-application-discovery-service의-이점&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-application-discovery-service%ec%9d%98-%ec%9d%b4%ec%a0%90&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;마이그레이션 계획 수립을 위한 신뢰할 수 있는 검색&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Application Discovey Service는 서버 사양 정보, 성능 데이터, 실행 프로세스 및 네트워크 연결 세부 정보를 수집, 이러한 데이터는 AWS로 마이그레이션하기 전에 상세한 비용 추정을 수행하거나 계획을 위해 서버를 애플리케이션으로 그룹화하는 데 사용될 수 있음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Migration Hub와 통합&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;AWS Application Discovery Service는 AWS Migration Hub와 통합되므로 마이그레이션 추적이 간소화 및 Hub를 통한 마이그레이션 상태 추적이 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;암호화로 데이터 보호&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;AWS Application Discovery Service는 수집한 데이터를 AWS로 전송할 때와 Application Discovery Service 데이터 스토어에 저장할 때 모두 암호화&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;마이그레이션 전문가의 지원&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;AWS Professional Services와 APN 마이그레이션 파트너는 수많은 엔터프라이즈 고객이 클라우드로의 마이그레이션을 성공적으로 완료하도록 지원&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;AWS DMS ( Database Migration Service )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-dms--database-migration-service-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-dms--database-migration-service-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Mrgate/&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS Database Migration Service는 데이터베이스를 AWS로 빠르고 안전하게 마이그레이션할 수 있도록 지원하는 서비스&lt;/li&gt;
&lt;li&gt;이그레이션하는 동안 소스 데이터베이스가 변함없이 운영되어 해당 데이터베이스를 사용하는 애플리케이션의 가동 중지 시간을 최소화&lt;/li&gt;
&lt;li&gt;AWS Database Migration Service는 Oracle에서 Oracle로의 마이그레이션과 같은 동종 마이그레이션뿐 아니라 Oracle 또는 Microsoft SQL Server에서 Amazon Aurora로의 마이그레이션과 같은 이기종 데이터베이스 플랫폼 간의 마이그레이션도 지원&lt;/li&gt;
&lt;li&gt;데이터베이스를 Amazon Aurora, Amazon Redshift, Amazon DynamoDB 또는 Amazon DocumentDB(MongoDB 호환 가능)로 마이그레이션하는 경우 6개월 동안 DMS를 무료로 제공&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;AWS DMS의 이점&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-dms의-이점&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-dms%ec%9d%98-%ec%9d%b4%ec%a0%90&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;간편한 사용&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;AWS Management Console에서 클릭 몇 번으로 데이터베이스 마이그레이션을 시작&lt;/li&gt;
&lt;li&gt;마이그레이션이 시작되면, 마이그레이션 프로세스 도중에 소스 데이터베이스에 발생한 데이터 변경을 자동으로 복제하는 것을 비롯하여 마이그레이션 프로세스의 모든 복잡성을 DMS에서 관리&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;최소한의 가동 중단&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;AWS Database Migration Service는 사실상 가동 중단 시간 없이 데이터베이스를 AWS로 마이그레이션하도록 지원&lt;/li&gt;
&lt;li&gt;마이그레이션하는 동안 소스 데이터베이스에 발생한 모든 데이터 변경 사항은 지속적으로 대상 데이터베이스에 복제되므로, 마이그레이션하는 동안 소스 데이터베이스가 변함없이 운영&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;널리 사용되는 데이터베이스 지원&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;AWS Database Migration Service를 사용하면 가장 널리 사용되는 상용 및 오픈 소스 데이터베이스 플랫폼에서 또는 이를 대상으로 데이터를 마이그레이션 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;저렴한 비용&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;마이그레이션 프로세스 중에 사용한 컴퓨팅 리소스와 추가 로그 스토리지에 대한 비용만 지불&lt;/li&gt;
&lt;li&gt;라바이트 규모의 데이터베이스를 3 USD라는 저렴한 비용&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;빠르고 쉬운 설정&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;마이그레이션 태스크는 AWS Database Migration Service가 마이그레이션을 실행하는 데 사용할 파라미터를 정의하는 곳&lt;/li&gt;
&lt;li&gt;마이그레이션 태스크에는 소스 및 대상 데이터베이스에 대한 연결 설정과 더불어 마이그레이션 프로세스를 실행하는 데 사용할 복제 인스턴스 선택이 포함&lt;/li&gt;
&lt;li&gt;동일한 태스크를 사용하여 실제로 마이그레이션을 수행하기 전에 테스트를 실행가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;안정성&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;AWS Database Migration Service는 복원력과 자가 복구 기능 존재&lt;/li&gt;
&lt;li&gt;소스 및 대상 데이터베이스, 네트워크 연결성 및 복제 인스턴스를 지속적으로 모니터링&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;AWS SMS ( Server Migration Service )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-sms--server-migration-service-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-sms--server-migration-service-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Mrgate/&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS Server Migration Service는 온프레미스 VMware vSphere, Microsoft Hyper-V/SCVMM 및 Azure 가상 머신을 AWS 클라우드로 자동으로 마이그레이션하는 서비스&lt;/li&gt;
&lt;li&gt;AWS SMS는 서버 VM을 Amazon EC2에 바로 배포할 수 있는 클라우드 호스팅된 Amazon 머신 이미지(AMI)를 증분 방식으로 복제하는 서비스&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;AWS SMS의 이점&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-sms의-이점&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-sms%ec%9d%98-%ec%9d%b4%ec%a0%90&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;클라우드 마이그레이션 프로세스가 단순화&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;마이그레이션이 시작되면 AWS SMS은(는) 복잡한 마이그레이션 프로세스를 관리하여 라이브 서버 볼륨의 AWS로 복제하고 새로운 AMI를 정기적으로 생성하는 작업 등을 자동화&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;여러 서버 마이그레이션 조율&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;AWS SMS는 복제 일정을 예약하고 애플리케이션을 구성하는 서버 그룹에 대한 진행 상황을 추적할 수 있도록 하여 서버 마이그레이션을 조율가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;서버 마이그레이션 증분 테스트&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;증분 복제 지원 기능을 통해 AWS SMS은(는) 마이그레이션된 서버에 대한 테스트를 신속하게 수행하고 확장가능&lt;/li&gt;
&lt;li&gt;AWS SMS은(는) 증분 변경 사항을 온프레미스 서버에 복제한 후 그 차이만 클라우드로 전송하기 때문에 일부 변경 사항만 반복적으로 테스트를 통해 절약 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;가장 많이 사용되는 운영 체제 지원&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Windows 및 대표적인 몇 가지 Linux 배포판을 포함하는 운영 체제 이미지 복제를 지원&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;가동 중지 최소화&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;증분 AWS SMS 복제는 최종 전환 중 애플리케이션 가동 중지로 인한 비즈니스 영향을 최소화&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;고객이 한도 증가를 요청하지 않는 한, 계정당 50개의 VM을 동시에 마이그레이션&lt;/li&gt;
&lt;li&gt;VM의 최초 복제부터 시작하여 VM당(계정당 아님) 90일의 서비스 사용 기간. 고객이 한도 증가를 요청하지 않는 한, 90일 후에는 진행 중인 복제를 종료&lt;/li&gt;
&lt;li&gt;정당 50개의 동시 애플리케이션 마이그레이션 ( 각 애플리케이션에 대해 그룹 10개 및 서버 50개 제한 )&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS Snowball Edge&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-snowball-edge&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-snowball-edge&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Mrgate/&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS Snowball Edge는 데이터 마이그레이션 및 엣지 컴퓨팅 디바이스이며, 두 가지 옵션으로 제공&lt;/li&gt;
&lt;li&gt;페타바이트급 대용량 데이터를 전송하기 위한 서비스&lt;/li&gt;
&lt;li&gt;Snowball Edge는 특정 Amazon EC2 인스턴스 유형과 AWS Lambda 함수를 지원하므로 고객은 AWS에서 개발하고 테스트한 후 원격 위치의 디바이스에 애플리케이션을 배포하여 데이터를 수집, 사전 처리 및 반환가능&lt;/li&gt;
&lt;li&gt;서비스와 더불어 물리적인 실체가 있는 장비가 존재하여 AWS에 요청하면 Snow ball를 배송받고 On-premise의 데이터를 빠르게 Snowball로 이동시킨 뒤, 작업이 완료되면 이 물리 장비를 다시 AWS로 배송하고 S3 Bucket에 저장함&lt;/li&gt;
&lt;li&gt;스토리지 용량은 최대 80TB까지 저장 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Snowball 이외에 기능이 추가된 Snowball Edge가 사용하는 경우&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;snowball-이외에-기능이-추가된-snowball-edge가-사용하는-경우&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#snowball-%ec%9d%b4%ec%99%b8%ec%97%90-%ea%b8%b0%eb%8a%a5%ec%9d%b4-%ec%b6%94%ea%b0%80%eb%90%9c-snowball-edge%ea%b0%80-%ec%82%ac%ec%9a%a9%ed%95%98%eb%8a%94-%ea%b2%bd%ec%9a%b0&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;페타바이트 규모의 데이터를 AWS로 이송하는 경우 적합&lt;/li&gt;
&lt;li&gt;VPN, Direct Connect, S3를 통한 직접적인 전송을 이용하기엔 데이터의 양이 많을 경우 Snowball을 사용하는 것이 좋음&lt;/li&gt;
&lt;li&gt;또한 물리적으로 격리된 환경이거나 인터넷 환경이 좋지 않을 경우 사용&lt;/li&gt;
&lt;li&gt;평균적으로 AWS로 데이터를 업로드하는데 1주일 이상이 소요되는 경우 Snowball 사용을 검토함&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;AWS Snoball의 이점&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-snoball의-이점&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-snoball%ec%9d%98-%ec%9d%b4%ec%a0%90&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;용이한 데이터 이동&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Snowball Edge는 약 1주 만에 테라바이트 규모의 데이터를 이동&lt;/li&gt;
&lt;li&gt;네트워크 조건이 AWS에서 대규모 데이터를 송수신하는 데 현실적으로 적합하지 않은 경우, 이를 사용하여 데이터베이스, 백업, 아카이브, 의료서비스 레코드, 분석 데이터 세트, IoT 센서 데이터 및 미디어 콘텐츠를 이동&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;간편한 사용&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;AWS에서 사전에 프로비저닝된 Snowball Edge 디바이스를 고객 위치로 자동으로 배송&lt;/li&gt;
&lt;li&gt;디바이스를 반환할 준비가 되면, 전자 잉크 선적 레이블이 자동으로 업데이트되고 화물 운송업체가 업로드가 시작되는 올바른 AWS 시설로 운송&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;로컬에서 데이터 처리 및 분석&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;EC2 AMI를 실행하고 AWS Lambda 코드를 Snowball Edge에 배포하여 기계 학습 또는 다른 애플리케이션을 통한 로컬 처리나 분석을 실행&lt;/li&gt;
&lt;li&gt;개발자와 관리자는 네트워크 연결 없이 일관된 AWS 환경으로 디바이스에서 직접 애플리케이션을 실행가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;독립형 스토리지&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Snowball Edge 디바이스는 NFS(파일 공유 프로토콜) 또는 객체 스토리지 인터페이스(S3 API)를 통해 기존 온프레미스 애플리케이션에 로컬 스토리지를 제공&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;보안&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Snowball Edge 디바이스는 변조 방지 엔클로저, 256-비트 암호화, 그리고 데이터의 보안 및 관리의 연속성을 보장하도록 설계된 업계 표준 Trusted Platform Module(TPM)을 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;확장성&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Snowball Edge 디바이스는 테라바이트 규모의 데이터를 전송할 수 있으며, 여러 대의 디바이스를 병렬로 사용하거나 함께 클러스터링하여 AWS에서 페타바이트 규모의 데이터를 송수신&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>AWS Developer</title>
      <link>https://mungops.github.io/system/aws/amazonwebservice/aws_developer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mungops.github.io/system/aws/amazonwebservice/aws_developer/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;strong&gt;AWS_Developer&lt;/strong&gt;&lt;/h1&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;AWS CodeBuild&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-codebuild&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-codebuild&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Developer/Codebuild.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS CodeBuild는 소스 코드를 컴파일하는 단계부터 테스트 실행 후 소프트웨어 패키지를 개발하여 배포하는 단계까지 마칠 수 있는 완전관리형의 지속적 통합 서비스&lt;/li&gt;
&lt;li&gt;CodeBuild는 지속적으로 확장되며 여러 빌드를 동시에 처리&lt;/li&gt;
&lt;li&gt;사전 패키징된 빌드 환경을 사용하면 신속하게 시작할 수 있으며 혹은 자체 빌드 도구를 사용하는 사용자 지정 빌드 환경제작 가능&lt;/li&gt;
&lt;li&gt;AWS CodeBuild는 코드를 실행하고 아티팩트를 Amazon S3 버킷에 저장&lt;/li&gt;
&lt;li&gt;CodeBuild에서는 사용한 컴퓨팅 리소스에 대한 분당 요금이 청구&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS CodeCommit&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-codecommit&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-codecommit&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Developer/ACC.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS CodeCommit은 안전한 Git 기반 리포지토리를 호스팅하는 완전관리형 소스 제어 서비스&lt;/li&gt;
&lt;li&gt;뛰어난 확장성의 안전한 에코시스템에서 여러 팀이 협업하여 코드 작업을 수행가능&lt;/li&gt;
&lt;li&gt;CodeCommit을 사용하면 소스 코드에서 바이너리까지 모든 항목을 안전하게 저장할 수 있고 기존 Git 도구와 원활하게 연동
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;에코시스템&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;자연계의 생태계처럼 관련 기업이 협력하여 공생하는 시스템을 의미&lt;/li&gt;
&lt;li&gt;IT 분야의 여러 기업이 몇몇 리더 기업을 중심으로 경쟁과 협력을 통해 공생하고 함께 발전해 나가는 모습을 지칭&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS CodeDeploy&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-codedeploy&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-codedeploy&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/Deploy/Code.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS에서 제공하는 배포 자동화 서비스&lt;/li&gt;
&lt;li&gt;EC2 인스턴스들에 코드를 배포하는 과정을 자동으로 진행시켜 줌&lt;/li&gt;
&lt;li&gt;카피스트라노 ( Capistrano )나 젠킨스 ( Jenkins ) 같은 서드파티 배포 자동화도구 보다 AWS 내 다양한 서비스와 손쉽게 연동이 가능하다.&lt;/li&gt;
&lt;li&gt;CodeDeploy는 무중단 배포 기법들인 IDP/ BGD를 둘다 지원한다.&lt;/li&gt;
&lt;li&gt;CodeDeploy란 단순히 명령어를 적어두고 프로그램이 그 명령을 순차적으로 실행하는 것 뿐이다.&lt;/li&gt;
&lt;li&gt;단순히 우리가 해주는 일을 대신 해주는 Auto Scaling과 같은 개념&lt;/li&gt;
&lt;li&gt;CodeDeploy로 배포하고자 한다면 EC2 인스턴스에 반드시 설치되어 있어야 하며 *.yml파일에 있는 절차를 따라서 배포를 진행한다.
 &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;strong&gt;CodeDeploy 구성요소&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;codedeploy-구성요소&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#codedeploy-%ea%b5%ac%ec%84%b1%ec%9a%94%ec%86%8c&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h1&gt;&lt;/h1&gt;&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-tpl&#34; data-lang=&#34;tpl&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;vesion: 0.0
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;os: linux
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;# 윈도우, 리눅스 등 어떤 OS를 위한 배포 파일인지를 명시한다.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;# CodeDeploy Agent는 배포 명령을 받으면 코드 저장소에 있는 프로젝트 전체를 서버의 임시 결로로 내려 받는다.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;# 내려받은 프로젝트를 서버 내 어느 경로로 이동시킬지 명시할 수 있다.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;files:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;    - source: /
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;      destination: /var/www
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;# AppSpec.yml에서는 배포 시 발생하는 다양한 생명주기마다 원하는 스크립트를 실행할 수 있게 후크를 제공해준다.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;# 배포 시 사용하는 스크립트들은 훤하는 곳에 둬도 되며, 보통은 프로젝트에 AppSpec.yml 파일을 포함하듯이 함께 포함한다.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;# 이 예시에서는 프로젝트 최상단에 scripts라는 디렉터리를 만들어 그 안에 스크립트들을 보관해 둔다.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;hooks:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;    # 코드 저장소에서 프로젝트를 낼받은 뒤 인스턴스 내 배포를 원하느 경로에 파일들을 옮기기 전이며, 예시에서 사용한 스크립트의 이름을 보면 리소스 데이터 번들을 압축 해제하는 것으로 추축할 수 있다.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;    BeforeInstall:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;        - location: scripts/UnzipResourceBundle.sh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;        - location: scripts/UnzipDataBundle.sh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;    # 파일을 모두 이동한 후 실행되는 스크립트들이다.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;    # 파일 이름을 봐서 리소스 파일들이 제대로 존재하는 지 테스트하는 것으로 추측할 수 있다.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;    # 또한 Timeout 옵션을 두어 180초 이내에 스크립트가 완료되지 않으면 배포에 실패한 것으로 간주한다.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;AfterInstall:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;    - location: scripts/RunResourceTests.sh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;    timeout: 180
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;    # 애플리케이션을 시작할 때 사용하는 스크립트들이다.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;    # 예시에서는 서버를 재시작하고 최대 240초 동안 기다리는 것을 알 수 있다.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;ApplicationStart:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;    - location: scripts/RestartServer.sh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;    timeout: 240
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;    # 서비스를 재시작한 후 실제로 서비스가 올바르게 실행됐는 지 확인 할 때 사용한느 스크립트들이다.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;    # runas 옵션을 주어 기본 사용자인 ec2-user가 아닌 codedeployuser라는 다른 user로 실행하게 했다.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;ValidateService:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;    - location: scripts/ValidateService.sh
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;    timeout: 30
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;x&#34;&gt;    runas: codedeployuser&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;스크립트 파일들에 실행 권항을 추가해서 Git에 올리고 싶다면 다음과 같은 명령어를 이용하면 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code&#34;&gt;

&lt;div&gt;&lt;pre&gt;&lt;code&gt;git update-index --chmod=&amp;#43;x &amp;lt;스크립트 파일 이름&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0&#34;&gt;
  &lt;button
    class=&#34;hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50&#34;
    title=&#34;Copy code&#34;
  &gt;
    &lt;div class=&#34;copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
    &lt;div class=&#34;success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4&#34;&gt;&lt;/div&gt;
  &lt;/button&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;CodeDeploy 작동절차&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;codedeploy-작동절차&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#codedeploy-%ec%9e%91%eb%8f%99%ec%a0%88%ec%b0%a8&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;AppSpec.yml 파일을 추가한 후, 프로젝트를 코드 저장소인 GitHub 혹은 AWS S3에 업로드한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;CodeDeploy에 프로젝트의 특정 버전을 배포해 달라 요청한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;CodeDeploy는 배포를 진행할 EC2 인스턴스들에 설치되어 있는 CodeDeploy Agent들과 통신하며 Agent들에게 요청받은 버전을 배포해 달라고 요청한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;요청을 받은 CodeDeploy Agent들은 코드 저장소에서 프로젝트 전체를 서버로 내려받는다. 그리고 내려받은 프로젝트에 있는 AppSpec.yml 파일을 읽고 해당 파일에 적힌 절차대로 배포를 진행한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;CodeDeploy Agent를 배포를 진행할 후 성공/ 실패 등 결과를 CodeDeploy에게 전달한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;AWS CodePipeling&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-codepipeling&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-codepipeling&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Developer/ACP.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS CodePipeline은 빠르고 안정적인 애플리케이션 및 인프라 업데이트를 위해 릴리스 파이프라인을 자동화하는 데 도움이 되는 완전관리형 지속적 전달 서비스&lt;/li&gt;
&lt;li&gt;코드 변경이 발생할 때마다 사용자가 정의한 릴리스 모델을 기반으로 릴리스 프로세스의 빌드, 테스트 및 배포 단계를 자동화&lt;/li&gt;
&lt;li&gt;AWS CodePipeline을 GitHub 또는 자체 사용자 지정 플러그인과 같은 타사 서비스와 손쉽게 통합가능&lt;/li&gt;
&lt;li&gt;사용한 만큼만 비용을 지불합니다. 선결제 금액이나 장기 약정이 존재하지 않음&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS X-Ray&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-x-ray&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-x-ray&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Developer/X.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS X-Ray는 개발자가 마이크로 서비스 아키텍처를 사용해 구축된 애플리케이션과 같은 프로덕션 분산 애플리케이션을 분석하고 디버그하는 데 도움을 주는 서비스&lt;/li&gt;
&lt;li&gt;X-Ray를 사용해 자신이 개발한 애플리케이션과 기본 서비스가 성능 문제와 오류의 근본 원인 식별과 문제 해결을 올바로 수행하는지 파악가능&lt;/li&gt;
&lt;li&gt;X-Ray는 요청이 애플리케이션을 통과함에 따라 요청에 대한 엔드 투 엔드 뷰를 제공하고 애플리케이션의 기본 구성 요소를 맵으로 제시&lt;/li&gt;
&lt;li&gt;3-티어 애플리케이션에서부터 수천 개의 서비스로 구성된 복잡한 마이크로 서비스 애플리케이션에 이르기까지 개발 중인 애플리케이션과 프로덕션에 적용된 애플리케이션 모두 분석가능&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>AWS Management</title>
      <link>https://mungops.github.io/system/aws/amazonwebservice/aws_management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mungops.github.io/system/aws/amazonwebservice/aws_management/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;strong&gt;AWS Management&lt;/strong&gt;&lt;/h1&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;Amazon CloudWatch&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;amazon-cloudwatch&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#amazon-cloudwatch&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Management/CloudWatch.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS 클라우드 리소스와 AWS에서 실행되는 애플리케이션을 위한 모니터링 서비스&lt;/li&gt;
&lt;li&gt;리소스 및 애플리케이션에 대해 측정할 수 있는 변수인 지표를 수집하고 추적 가능&lt;/li&gt;
&lt;li&gt;사용중인 모든 AWS 서비스에 대한 지표가 자동적으로 표시디며, 사용자 지정 대시보드를 통해 사용자 지정 애플리케이션에 대한 지표를 표시하고 지정 집합 표시 가능&lt;/li&gt;
&lt;li&gt;지표는 Cloudwatch에 게시된 시간 순서별 데이터 요소 세트이며, 모니터링할 변수 ( 가령 EC2의 CPU 사용량은 EC2가 제공하는 하나의 지표 )&lt;/li&gt;
&lt;li&gt;기본 모니터링과 세부 모니터링으로 나뉘며, 가각 5분과 1분 주기로 수집함&lt;/li&gt;
&lt;li&gt;기본 모니터링은 자동활성화이지만, 세부 모니터링은 선택사항&lt;/li&gt;
&lt;li&gt;기본적으로 CPU, Network, Disk, Status Check 등을 수집 ( Memory 항목이 없음 )&lt;/li&gt;
&lt;li&gt;지표 데이터의 보존기간
&lt;ul&gt;
&lt;li&gt;기간 60초 미만의 경우, 3시간&lt;/li&gt;
&lt;li&gt;기간 60초의 경우, 15일&lt;/li&gt;
&lt;li&gt;기간 300초의 경우 63일&lt;/li&gt;
&lt;li&gt;기간 3600초의 경우, 455일&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AWS CLI 혹은 API를 이용하여, Cloudwatch에 사용자 정의 지표 게시 가능&lt;/li&gt;
&lt;li&gt;경보기능을 사용하여 어떤 지표가 일정기간동안 일정값에 도달할 경우 각 서비스가 취해야할 행동을 정의할 수 있음&lt;/li&gt;
&lt;li&gt;모니터링하기로 선택한 측정치가 정의한 임계값을 초과할 경우 하나 이상의자동화 작업을 수행하도록 구성&lt;/li&gt;
&lt;li&gt;EC2의 경우, 경보에 따라, 인스턴스 중비, 복구, 종료, 재부팅 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Cloudwatch Agent&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;cloudwatch-agent&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#cloudwatch-agent&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;EC2에 Agent를 설치하게 되면 더 많은 시스템 수준 지표를 수집할 수 있음&lt;/li&gt;
&lt;li&gt;온프레미스 서버 또한 Cloudwatch Agent 사용 가능&lt;/li&gt;
&lt;li&gt;Memory 항목 포함&lt;/li&gt;
&lt;li&gt;Cloudwatch Agent는 로그를 수집할 수 있으며, 후술할 Cloudwatch Logs 기능 사용 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Cloudwatch Logs&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;cloudwatch-logs&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#cloudwatch-logs&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;EC2( Agent에서 수집된 ), CloudTrail, Route 53, Route 53, VPC flow Log 등 기타 소스에서 발생한 로그 파일을 모니터링, 저장 및 엑세스하는 기능&lt;/li&gt;
&lt;li&gt;Cloudwatch Agent를 사용하여 로그를 수집&lt;/li&gt;
&lt;li&gt;Cloudwatch Log Insights를 사용하여 CloudWatch Logs에서 로그 데이터를 대화식으로 검색해 분석할 수 있음&lt;/li&gt;
&lt;li&gt;Agent는 기본적으로 5초마다 로그 데이터를 전송&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Cloudwatch Events&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;cloudwatch-events&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#cloudwatch-events&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;AWS 각 서비스의 이벤트가 사용자가 지정한 이벤트패턴과 일치하거나 일정이 트리거될 경우, 사용자가 월하는 기능을 발동시키도록 하는 기능&lt;/li&gt;
&lt;li&gt;이번트 소스와 대상으로 나뉨&lt;/li&gt;
&lt;li&gt;이벤트 소스: AWS 환경에서 발생하는 이벤트이며, 가령 S3의 경우 오브젝트 등록, 삭제 등을 들 수 있음&lt;/li&gt;
&lt;li&gt;대상: 이벤트 발생시 해야할 행동을 정의하는 것이며, SNS 전송 혹은 람다, SQS 게시 등을 설정할 수 있음&lt;/li&gt;
&lt;li&gt;이벤트 소스에 해당하는 규칙이 트리거될 경우 대상에 해당하는 서비스를 실행시킴&lt;/li&gt;
&lt;li&gt;이벤트가 시스템에 생성해 둔 규칙과 일치하는 경우, AWS Lambda 함수를 자동으로 호출하고, 해당 이벤트를 Amazon Kinesis 스트림에 전달하고, Amazon SNS 주제를 알림&amp;rsquo; having 1=1##&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS CloudFormation&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-cloudformation&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-cloudformation&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Management/CloudFormation.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;인프라를 관리 간소화를 목적으로 하는 서비스&lt;/li&gt;
&lt;li&gt;AWS의 리소스를 일일이 설정하지 않고 해당 서비스의 프로비져닝과 설정을 미리 구성하여 반복작업을 줄이도록 도와주는 역할&lt;/li&gt;
&lt;li&gt;EC2, Auto Scaling Group으로부터 ELB, RDS, S3 등을 사전에 구성하여 한 번의 클릭으로 다수의 서비스를 빠르게 생성할 수 있음&lt;/li&gt;
&lt;li&gt;생성된 리소스 모음은 다른 계정 혹은 다른 리전에 옮겨 사용 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Stack&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;stack&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#stack&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;하나의 단위로 관리할 수 있는 AWS 리소스들의 모음&lt;/li&gt;
&lt;li&gt;스택을 생성, 업데이트 또는 삭제하여 리소스 모음을 생성, 업데이트, 삭제가 가능&lt;/li&gt;
&lt;li&gt;스택에서 실행중인 리소스를 변경해야 하는 경우 스택을 업데이트할 수 있는 데, 이 업데이트된 세트를 변경세트라 칭함&lt;/li&gt;
&lt;li&gt;스택을 삭제하는 경우 삭제할 스택을 지정하면 해당 스택과 스택 내 모든 리소스를 삭제&lt;/li&gt;
&lt;li&gt;AWS에서 리소스를 삭제할 수 없는 경우 스택이 삭제&lt;/li&gt;
&lt;li&gt;스택의 리소스 중 하나라도 성공적으로 생성되지 않은 경우 성공적으로 생성한 모든 리소스를 모두 삭제함 ( Automatic rollback on error )&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Template&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;template&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#template&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;스택을 구성하는 AWS 리소스를 JSON 혹은 YAML 형식으로 선언한 텍스트 파일&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;템플릿은 로컬 혹은 S3에 저장되며, 템플릿을 불러올 때 S3 bucket을 지정할 수 있음&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;템플릿을 &amp;ldquo;Designer&amp;quot;을 통해 생성할 수도 있으며, S3 bucket에 저장된 것을 불러와 생성이 가능&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Template의 여러 요소&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;template의-여러-요소&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#template%ec%9d%98-%ec%97%ac%eb%9f%ac-%ec%9a%94%ec%86%8c&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Parameter :&lt;/strong&gt; 선택 섹션, 스택 생성 및 업데이트 시 템플릿에 전달하는 값, 사용자가 선택하는 여러 요소들 ( EC2 유형 - t2.micro 등 )&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Conditions :&lt;/strong&gt; 선택 섹션, 조건문, 리소스가 생성되는 조건을 만들어 조건 충족시에만 리소스를 만들 수 있또록 하는 요소&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Resources :&lt;/strong&gt; 필수 섹션, CLoudformation에 포함될 리소스&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Metadata :&lt;/strong&gt; 선택 섹션, 템플릿에 대한 세부 정보를 제공하는 임의의 JSON, YAML 객체&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Mappings :&lt;/strong&gt; 선택 센셕, 프로그래밍 언어로 따지만 &amp;lsquo;Switch&amp;rsquo; 조건문에 해당하며, &amp;lsquo;키&amp;rsquo;에 해당하는 값 세트를 생성하고 해당하는 키가 있으면 값 세트에 맞춰 리소를 생성&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS CloudTrail&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-cloudtrail&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-cloudtrail&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Management/CloudTrail.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;CloudTrail의 이벤트는 AWS 계정에서의 활동 기록을 의미&lt;/li&gt;
&lt;li&gt;용자, 역할 또는 CloudTrail에서 모니터링이 가능한 서비스에 의해 수행되는 작업, AWS Management 콘솔, AWS SDK, 명령줄 도구 및 기타 AWS 서비스를 통해 수행되는 API 계정 활동과 비 API 계정 활동 모두에 대한 기록을 제공&lt;/li&gt;
&lt;li&gt;CloudTrail에는 로깅할 수 있는 두 가지 유형의 이벤트가 존재
&lt;ul&gt;
&lt;li&gt;관리 이벤트 : 기본적으로 로깅&lt;/li&gt;
&lt;li&gt;데이터 이벤트 : 기본적으로 로깅을 하지 않음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;관리 이벤트와 데이터 이벤트 모두 동일한 CloudTrail JSON 로그 형식을 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;관리 이벤트&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;관리-이벤트&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ea%b4%80%eb%a6%ac-%ec%9d%b4%eb%b2%a4%ed%8a%b8&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;AWS 계정의 리소스에 대해 수행되는 관리 작업에 대한 정보를 제공하며, 이를 제어 영역 작업이라 함&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;보안 구성&lt;/li&gt;
&lt;li&gt;디바이스 등록&lt;/li&gt;
&lt;li&gt;데이터 라우팅 규칙 구성&lt;/li&gt;
&lt;li&gt;로깅 설정&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;데이터 이벤트&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;데이터-이벤트&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%eb%8d%b0%ec%9d%b4%ed%84%b0-%ec%9d%b4%eb%b2%a4%ed%8a%b8&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;데이터 이벤트는 리소스 상에서, 또는 리소스 내에서 수행되는 리소스 작업에 대한 정보를 제공하며, 이를 데이터 영역 작업이라 함&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;Amazon S3 객체 수준 API활동&lt;/li&gt;
&lt;li&gt;AWS Lambda 함수 실행 활동&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Insights events&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;insights-events&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#insights-events&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;CloudTrail Insights 이벤트는 AWS 계정에서 비정상적인 활동을 캡처&lt;/li&gt;
&lt;li&gt;Insights events을 활성화하고 CloudTrail가 비정상적인 활동을 감지한 경우, Insights events는 다른 폴더나 트레일에 대한 대상 S3 버킷의 접두사에 로깅&lt;/li&gt;
&lt;li&gt;Insights events은 계정 API 사용량 변화가 계정의 일반적인 사용 패턴과 크게 다르다는 것을 CloudTrail가 감지한 경우에만 로깅&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;CloudTrail 이벤트 기록&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;cloudtrail-이벤트-기록&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#cloudtrail-%ec%9d%b4%eb%b2%a4%ed%8a%b8-%ea%b8%b0%eb%a1%9d&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;CloudTrail 이벤트 기록은 CloudTrail 이벤트에 대한 지난 90일간의 기록으로 확인, 검색 및 다운로드가 가능&lt;/li&gt;
&lt;li&gt;AWS Management 콘솔, AWS SDK, 명령줄 도구 및 기타 AWS 서비스를 통해 수행되는 AWS 계정 활동에 대한 가시성을 확보가능&lt;/li&gt;
&lt;li&gt;CloudTrail 콘솔에서 어떤 열이 표시되는지를 선택하여 이벤트 기록 보기를 사용자 지정가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;추적&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;추적&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ec%b6%94%ec%a0%81&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;추적은 Amazon S3 버킷, CloudWatch Logs 및 CloudWatch 이벤트에 CloudTrail 이벤트를 제공할 수 있는 구성&lt;/li&gt;
&lt;li&gt;추적을 사용하여 제공하고자 하는 CloudTrail 이벤트를 필터링하고, AWS KMS 키로 CloudTrail 이벤트 로그 파일을 암호화하며, 로그 파일 제공을 위해 Amazon SNS 알림을 설정이 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;조직 추적&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;조직-추적&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ec%a1%b0%ec%a7%81-%ec%b6%94%ec%a0%81&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;조직 추적은 조직의 마스터 계정과 모든 멤버 계정의 CloudTrail 이벤트를 동일한 Amazon S3 버킷, CloudWatch Logs 및 CloudWatch 이벤트에 전달할 수 있도록 하는 구성을 의미&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS Config&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-config&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-config&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Management/Config.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS Config는 AWS 리소스 구성을 측정, 감사 및 평가할 수 있는 서비스&lt;/li&gt;
&lt;li&gt;Config는 AWS 리소스 구성을 지속적으로 모니터링 및 기록하고, 원하는 구성을 기준으로 기록된 구성을 자동으로 평가&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS OpsWorks&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-opsworks&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-opsworks&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS OpsWorks는 Chef 및 Puppet의 관리형 인스턴스를 제공하는 구성 관리 서비스&lt;/li&gt;
&lt;li&gt;Chef 및 Puppet은 코드를 사용해 서버 구성을 자동화할 수 있게 해주는 자동화 플랫폼&lt;/li&gt;
&lt;li&gt;OpsWorks를 사용하면 Chef 및 Puppet을 통해 Amazon EC2 인스턴스 또는 온프레미스 컴퓨팅 환경 전체에서 서버가 구성, 배포 및 관리되는 방법을 자동가 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS Managed Services&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-managed-services&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-managed-services&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Management/AMS.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS Managed Services(AMS)는 안전하고 규정을 준수하는 AWS Landing Zone을 제공하고 고객 대신 AWS를 운영하는 서비스&lt;/li&gt;
&lt;li&gt;AWS Managed Services는 인프라를 유지 관리하기 위한 모범 사례를 구현하여 운영 오버헤드와 위험을 줄일 수 있도록 지원&lt;/li&gt;
&lt;li&gt;AWS Managed Services는 변경 요청, 모니터링, 패치 관리, 보안, 백업 서비스 등과 같은 일반적인 활동을 자동화하고 인프라를 프로비저닝, 운영 및 지원하기 위한 전체 수명 주기 서비스를 제공&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;strong&gt;Landing Zone&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;landing-zone&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#landing-zone&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;검증된 엔터프라이즈 운영 모델이자 지속적인 비용 최적화 및 일상적인 인프라 관리 수단&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS Service Catalog&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-service-catalog&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-service-catalog&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS Service Catalog를 사용하는 조직은 AWS에서 사용이 승인된 IT 서비스 카탈로그를 생성하고 관리하는 서비스&lt;/li&gt;
&lt;li&gt;서비스에는 가상 머신 이미지, 서버, 소프트웨어 및 데이터베이스에서 멀티 티어 애플리케이션 아키텍처를 완성하는 모든 서비스가 포함&lt;/li&gt;
&lt;li&gt;AWS Service Catalog를 사용하면 일반적으로 배포된 IT 서비스를 중앙에서 관리할 수 있고 일관된 거버넌스를 달성하고 규정 준수 요건을 충족하는 데 도움이 되는 동시에 사용자가 필요로 하는 승인된 IT 서비스만을 신속하게 배포가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;AWS Service Catalog의 핵심개념&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-service-catalog의-핵심개념&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-service-catalog%ec%9d%98-%ed%95%b5%ec%8b%ac%ea%b0%9c%eb%85%90&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Service Catalog&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;서비스 카탈로그는 하나의 AWS account에 종속됩니다. 관리자가 관리하며 하나 이상의 포트폴리오(Portfolios)를 포함&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Administrtor&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;관리자는 서비스 카탈로그 안에 있는 프로덕트 포트폴리오(Portfolios of Products)를 업로드하고 관리&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;User&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;사용자는 서비스 카탈로그의 포털페이지를 접속하여 여러 포트폴리오를 찾아보고, 관심있는 프로덕트를 선택&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Portal&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;포탈은 서비스 카탈로그의 창문(View)인데요, 특정 사용자가 접속할 수 있는 포트폴리오와 제품만 보여주도록 맞춤제작 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Portfolio&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;포트폴리오란 서비스 카탈로그 아래 버전관리 중인 프로덕트들의 모음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Product&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;프로덕트는 AWS리소스들의 모음 ( EC2 인스턴스, 애플리케이션 서버, 데이타베이스 )들로 이 단위 별로 프로덕트를 런치하고 관리&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS TrustedAdvisor&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-trustedadvisor&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-trustedadvisor&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Management/ATA.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS Trusted Advisor는 AWS 모범 사례에 따라 리소스를 프로비저닝하는 데 도움이 되도록 실시간 지침을 제공하는 온라인 도구&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;AWS TrustedAdvisro의 분석 카테고리&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-trustedadvisro의-분석-카테고리&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-trustedadvisro%ec%9d%98-%eb%b6%84%ec%84%9d-%ec%b9%b4%ed%85%8c%ea%b3%a0%eb%a6%ac&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Management/ATA2.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>AWS Security</title>
      <link>https://mungops.github.io/system/aws/amazonwebservice/aws_security/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mungops.github.io/system/aws/amazonwebservice/aws_security/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;strong&gt;AWS Security&lt;/strong&gt;&lt;/h1&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;기본적으로 AWS의 보안적 요소는 설비, 인프라 등과 관련된 물리적인 부분과 네트워크 인프라 등은 AWS가 책임을 지고 보안 대책을 수행합니다. 이러한 인프라 위의 OS, 애플리케이션, 네트워크 설정, 계정 관리 등은 사용자가 책임을 져야 하는 공유 책임 모델의 구조를 띄고 있습니다.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;AWS가 제공하는 기본적인 보안 서비스&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;AWS 제공 서비스&lt;/th&gt;
          &lt;th&gt;서비스 개요&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;통신 경로 암호화&lt;/td&gt;
          &lt;td&gt;AWS 매니지먼트 콘솔로의 접속 또는 API를 사용할 때 HTTPS를 사용해 데이터를 암호화합니다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Security Group&amp;amp; NetworkACL&lt;/td&gt;
          &lt;td&gt;인스턴스들의 보안 그룹과 서브넷들의 통신 허가/ 거부 설정을 하는 네트워크 ACL을 사용해 예상하지 못하는 통신을 사전차단합니다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Identity and Access Management( IAM )&lt;/td&gt;
          &lt;td&gt;사용자의 역할을 분리하고 최소한의 권한만을 부여하여 보안을 유지합니다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Multi Factor Authentication ( MFA )&lt;/td&gt;
          &lt;td&gt;AWS 계정 또는 IAM 계정에 일회성 비밀번호 인증을 추가합니다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Virtual Private Cloud ( VPC )&lt;/td&gt;
          &lt;td&gt;퍼블릭 클라우드에 프라이빗 환경을 구축합니다. 다른 거점에서 VPN으로 접속할 수도 있습니다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Direct Connect ( 전용선 연결 )&lt;/td&gt;
          &lt;td&gt;On Premise 환경에서 AWS 전용선을 통해 직접 연결하여 데이터 도청, 변조 등의 위험을 줄일 수 있습니다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;데이터 암호화&lt;/td&gt;
          &lt;td&gt;EBS, S3, Glacier, Redshift, RDS에 저장하고 있는 데이터 또는 객체를 암호화할 수 있습니다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Hardware Security Module ( CloudHSM )&lt;/td&gt;
          &lt;td&gt;암호화 키를 안전하게 저장하고 관리합니다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Trusted Advisor&lt;/td&gt;
          &lt;td&gt;AWS 지원이 제공하는 서비스 중에 하나로, 각종 서비스의 설정과 운용 상황을 확인해서 개선할 부분을 제공해줍니다.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;Amazon Inspector&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;amazon-inspector&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#amazon-inspector&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Analysis/&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Amazon Inspector는 AWS에 배포된 애플리케이션의 보안 및 규정 준수를 개선하는데 도움이 되는 자동 보안 평가 서비스&lt;/li&gt;
&lt;li&gt;모범 사례로부터 애플리케이션의 노출, 취약성 및 편차를 자동으로 평가&lt;/li&gt;
&lt;li&gt;심각도 수준에 따라 우선순위가 지정된 상세한 보안 평가 결과 목록을 생성&lt;/li&gt;
&lt;li&gt;Amazon EC2 인스턴스의 의도하지 않은 네트워크 접근성과 이 EC2 인스턴스의 취약성을 확인&lt;/li&gt;
&lt;li&gt;Amazon Inspector 평가는 일반 보안 모범 사례 및 취약성 정의에 매핑된 사전 정의 규칙 패키지로 제공&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS Artfact&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-artfact&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-artfact&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Security/&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS Artifact는 자신에게 해당되는 규정 준수와 관련된 정보를 제공하는 신뢰할 수 있는 중앙 리소스&lt;/li&gt;
&lt;li&gt;AWS 보안 및 규정 준수 보고서와 엄선된 온라인 계약에 대한 온디맨드 액세스를 제공&lt;/li&gt;
&lt;li&gt;보고서에는 SOC(Service Organization Control) 보고서와 PCI(Payment Card Industry) 보고서, 그리고 여러 지역의 인정 기구와 규정 준수 기관에서 AWS 보안 제어의 구현 및 운영 효율성을 입증하는 인증서가 포함&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS CertificateManager&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-certificatemanager&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-certificatemanager&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Security/&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS Certificate Manager는 AWS 서비스 및 연결된 내부 리소스에 사용할 공인 및 사설 SSL/TLS(Secure Sockets Layer/전송 계층 보안) 인증서를 손쉽게 프로비저닝, 관리 및 배포할 수 있도록 지원하는 서비스&lt;/li&gt;
&lt;li&gt;AWS Certificate Manager는 SSL/TLS 인증서를 구매, 업로드 및 갱신하는 데 드는 시간 소모적인 수동 프로세스를 대신 처리&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;strong&gt;SSL/ TLS, HTTPS&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;ssl-tls-https&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#ssl-tls-https&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;hr&gt;
&lt;h3&gt;&lt;strong&gt;SSL/ TLS ( Secure Soket Layer, Transport Layer Security )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;ssl-tls--secure-soket-layer-transport-layer-security-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#ssl-tls--secure-soket-layer-transport-layer-security-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/53/ST.png&#34; alt=&#34;SSL/TLS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;상위 계층 메시지를 분할, 압축하고 메시지 인증 코드 ( MAC )추가 및 암호화하는 작업을 수행하는 프로토콜&lt;/li&gt;
&lt;li&gt;Handshake 프로토콜에서 클라이언트와 서버는 상대방을 확인하고 사용할 키 교환 방식, 암호화 방식, 생성에 필요한 값 등을 전달하여 암호화 채널 수립을 위한 항목들을 협상&lt;/li&gt;
&lt;li&gt;단말 ( PC, server 등 )과 단만간의 암호화 통신을 위한 프로토콜&lt;/li&gt;
&lt;li&gt;SSLv1은 최초의 버전으로서 문제가 많아 발표되지 않고 사장됨&lt;/li&gt;
&lt;li&gt;SSLv2부터 공개가 되었으며 보다더 나은 버전인 SSLv3가 나왔으면 이를 기반으로 TLSv1 생성&lt;/li&gt;
&lt;li&gt;TLSv1.0 v1.1, v1.2, v1.3이 나왔지만 아직 많은 브라우저에서 TLSv3을 지원하지 않음&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;SSL handshake&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;ssl-handshake&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#ssl-handshake&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Se/3Hand.png&#34; alt=&#34;3Hand&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Client Hello: Client가 Server에게 자신이 사용가능한 Random byte( 대칭키 생성에 사용됨 ), Session ID, S니/ TLS 버전이 포함된 Cipher suite list를 전달&lt;/li&gt;
&lt;li&gt;Server Hello: Server 가 Client가 보낸 Cipher suite List 중 하나를 선택해 전달&lt;/li&gt;
&lt;li&gt;Client Key exchange: 키 교환 실시 ( 실제 데이터 암호화에 사용할 키를 전달하여, S니 인증서에서 추출된 공개키로 암호화 )&lt;/li&gt;
&lt;li&gt;Server certificate: 서버의 인증서를 클라이언트에게 전송&lt;/li&gt;
&lt;li&gt;Sever hello done: 서버 전달 종료&lt;/li&gt;
&lt;li&gt;Change cipher Specs, Finished: 이후 보내는 메시지들은 협상된 암호화 알고리즘에 따라 보낼 것임을 통보&lt;/li&gt;
&lt;li&gt;Finished, Change cipher Specs: 클라이언트가 보낸 메시지를 확인 후, handshake를 종료하고 하나의 대칭키로 통신한다고 통보&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS CloudHSM&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-cloudhsm&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-cloudhsm&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Security/&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS CloudHSM은 AWS 클라우드에서 자체 암호화 키를 손쉽게 생성 및 사용할 수 있도록 지원하는 클라우드 기반 하드웨어 보안 모듈(HSM)&lt;/li&gt;
&lt;li&gt;사용자를 위해 하드웨어 프로비저닝, 소프트웨어 패치, 고가용성, 백업 등 시간 소모적인 관리 작업을 자동화하는 완전관리형 서비스&lt;/li&gt;
&lt;li&gt;CloudHSM에서는 FIPS 140-2 레벨 3 인증 HSM을 사용하여 자체 암호화 키를 관리가능&lt;/li&gt;
&lt;li&gt;모든 키를 대부분의 상용 HSM으로 내보내기 가능&lt;/li&gt;
&lt;li&gt;CloudHSM을 사용하면 선결제 비용 없이 온디맨드로 HSM 용량을 추가 및 제거하여 신속하게 확장/축소가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;strong&gt;사용방법&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;사용방법&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ec%82%ac%ec%9a%a9%eb%b0%a9%eb%b2%95&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Security/HSM.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AWS CloudHSM은 자체 Amazon Virtual Private Cloud(VPC)에서 실행되므로, Amazon EC2 인스턴스에서 실행되는 애플리케이션에 손쉽게 HSM을 사용&lt;/li&gt;
&lt;li&gt;CloudHSM에서는 표준 VPC 보안 제어 기능을 사용하여 HSM에 대한 액세스를 관리가 가능&lt;/li&gt;
&lt;li&gt;애플리케이션은 HSM 클라이언트 소프트웨어가 설정한 상호 인증된 SSL 채널을 사용하여 HSM에 연결&lt;/li&gt;
&lt;li&gt;HSM은 고객의 EC2 인스턴스와 가까운 Amazon 데이터 센터에 위치하므로, 온프레미스 HSM과 비교하여 애플리케이션과 HSM 간 네트워크 지연 시간을 줄일 수 있음&lt;/li&gt;
&lt;li&gt;업무 분리 및 역할 기반 액세스 제어는 AWS CloudHSM의 설계에 내제&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;AWS에서 하드웨어 보안 모듈(HSM) 어플라이언스를 관리하지만, 고객의 키에 대한 액세스 권한이 없음&lt;/li&gt;
&lt;li&gt;고객이 자체 키를 제어하고 관리&lt;/li&gt;
&lt;li&gt;애플리케이션 성능이 개선&lt;/li&gt;
&lt;li&gt;다중 AZ(가용 영역)에 제공되는 변조 방지 하드웨어에 키를 안전하게 저장&lt;/li&gt;
&lt;li&gt;고객의 HSM은 고객의 Virtual Private Cloud(VPC)에 상주하며 다른 AWS 워크로드와 격리&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS DirectoryService&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-directoryservice&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-directoryservice&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Security/&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS Directory Service는 다른 AWS 서비스에서 Amazon Cloud Directory 및 Microsoft Active Directory(AD)를 사용할 수 있는 몇 가지 방법을 제공하는 서비스&lt;/li&gt;
&lt;li&gt;사용자, 그룹 및 디바이스에 대한 정보를 저장하고, 관리자는 이를 사용하여 정보 및 리소스에 대한 액세스를 관리&lt;/li&gt;
&lt;li&gt;AWS Directory Service는 클라우드에서 기존 Microsoft AD 또는 LDAP(Lightweight Directory Access Protocol)–인식 애플리케이션을 사용하려는 고객에게 다양한 디렉터리 선택 옵션을 제공&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS IAM&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-iam&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-iam&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/IAM/IAM.png&#34; alt=&#34;IAM&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AWS 리소스에 대한 엑세스를 안전하게 제어할 수 있는 서비스로 IAM을 사용하여 리소스를 사용하도록 권한을 부여하거나 인증된 대상을 제어&lt;/li&gt;
&lt;li&gt;IAM 정책은 &amp;ldquo;Action ( 어떤 서비스에 )&amp;rdquo;, &amp;ldquo;Resource ( 어떤 기능 또는 범위를 )&amp;rdquo;, &amp;ldquo;Effect ( 허가할 것인가 )&amp;ldquo;라는 3가지 규칙을 기반으로 AWS 서비스를 사용하는 데 필요한 권한을 설정&lt;/li&gt;
&lt;li&gt;주요기능
&lt;ul&gt;
&lt;li&gt;AWS 계정에 대한 공유 엑세스&lt;/li&gt;
&lt;li&gt;서비스별 세분화된 권한 제공 가능&lt;/li&gt;
&lt;li&gt;EC2에서 실행되는 앱을 위한 AWS 리소스 엑세스 권한 제공&lt;/li&gt;
&lt;li&gt;멀티 팩터 인증 ( MFA )&lt;/li&gt;
&lt;li&gt;자격 증명 연동&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;AWS 서비스들은 IAM Role을 할당받아 권한을 부여받을 수 있음&lt;/li&gt;
&lt;li&gt;Access Key와 Secret Access Key를 직접 입력하지 않고 권한 부여 가능&lt;/li&gt;
&lt;li&gt;IAM 사용자 계정을 만들어 사용자에게 적절한 권한을 부여하고 사용 가능한 서비스를 제한할 수 있음&lt;/li&gt;
&lt;li&gt;사용자와 그룹은 N : N 의 관계가 성립이 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;정책 ( Policy )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;정책--policy-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ec%a0%95%ec%b1%85--policy-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;User, Group, Role이 사용할 수 있는 권한의 범위를 지정하는 것&lt;/li&gt;
&lt;li&gt;S3FullAccess, Administrator Access 등 다양한 엑세스 권한이 이미 정의되어 있으며 이를 ‘AWS 관리형 이라 함&lt;/li&gt;
&lt;li&gt;사용자 정의 정책 생성
&lt;ul&gt;
&lt;li&gt;JSON 형식 또는 직접 선택을 통해 사용자 정의 정책 선택 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;역할 ( Role )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;역할--role-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ec%97%ad%ed%95%a0--role-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;특정 권한을 가진 계정에 생성할 수 있는 IAM 자격증명&lt;/li&gt;
&lt;li&gt;역할에는 다음과 같은 주체가 있음
&lt;ul&gt;
&lt;li&gt;AWS 계정의 IAM 사용자&lt;/li&gt;
&lt;li&gt;AWS의 서비스 ( EC2, RDS, ELB 등 )&lt;/li&gt;
&lt;li&gt;외부 자격 증명 공급자 서비스에 의해 인증된 외부 사용자&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;역할 생성시 IAM 사용자, 서비스, 외부 사용자 등 주체를 정해야 함&lt;/li&gt;
&lt;li&gt;하나의 역할에는 다수의 정책을 연결할 수 있음&lt;/li&gt;
&lt;li&gt;생성된 역할을 서비스 혹은 IAM 사용자 등에 연결&lt;/li&gt;
&lt;li&gt;Region에 국한되지 않고 사용 가능&lt;/li&gt;
&lt;li&gt;신규 유저는 생성시 아무런 권한이 없으며 Access Key와 Secret Access Key가 할당&lt;/li&gt;
&lt;li&gt;각 키는 최초 생성시에만 볼 수 있으며 즉시 보관해야 함&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;그룹&amp;amp; 사용자&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;그룹-사용자&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ea%b7%b8%eb%a3%b9-%ec%82%ac%ec%9a%a9%ec%9e%90&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;사용자는 IAM 사용자를 의미하여 관리자 계정에 의해 부여받은 권한에 한해 제한된 서비스에 접근할 수 있는 계정을 의미&lt;/li&gt;
&lt;li&gt;콘솔 로그인과 프로그래밍 엑세스 가능 여부를 선택하여 생성 가능&lt;/li&gt;
&lt;li&gt;콘솔 로그인이 승인된 경우, 별도의 링크를 통해 콘솔에 로그인 할 수 있음&lt;/li&gt;
&lt;li&gt;각 사용자마다 정책을 부여할 수 있음&lt;/li&gt;
&lt;li&gt;사용자 모두에게 일일이 부여하기 힘들거나 그룹단위로 통제하고 싶은 경우, Group을 사용할 수 있음&lt;/li&gt;
&lt;li&gt;그룹은 이미 생성된 사용자와 권한을 설정할 수 있으며, 그룹 내 모든 사용자는 그룹의 권한을 적용받음&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;특징&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;특징&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ed%8a%b9%ec%a7%95&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;권한&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;AWS의 서비스나 자원에 어떤 작업을 할 수 있는지 명시해두는 규칙&lt;/li&gt;
&lt;li&gt;&amp;quot; 서울 리전에 있는 모든 EC2를 조회할 수 있다&amp;rdquo; 와 같은 항목이 하나의 권한을 칭한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;정책&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;권한들의 모음으로, 사용자나 권한들에 직접 적용은 불가능하며, 권한들로 만든 정책을 적용&lt;/li&gt;
&lt;li&gt;정책은 사용자, 그룹, 역할에 적용할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;사용자&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;사용자는 AWS의 기능과 자원을 이용하는 객체, 사용자별로 어떤 권한을 가졌는지 세분화해서 지정할 수 있으며, 사용자는 AWS Console에 접근할 수 있는 사람일 수도 있고, 자동화되어 실행되는 프로그램일 수도 있다. 접속하는 사용자인 경우에는 비밀번화가 제공되지만, 프로그램인 경우에는 액세스 키 ID와 비밀 엑세스 키가 제공된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;그룹&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;여러 사용자에게 공통으로 권한을 부여할 수 있게 만들어진 개념이다. 하나의 그룹에 여러 명의 사용자를 지정이 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;역할&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;어떤 행위를 하는 객체에 여러 정책을 적용한다는 점에서 사용자와 비슷ㅎ자ㅣ만 객체가 사용자가 아닌 서비스나 다른 AWS 계정의 사용자라는 점에서 차이가 있다. 사용자가 아닌 특정 서비스에서 생성한 객체에 권한을 부여하는 데 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;인스턴스 프로파일&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;사용자가 사람을 구분하고 그 사람에 권한을 주기 위한 개념이었따면, 인스턴스 프로파일은 EC2 인스턴스를 구분하고 그 인스턴스에 권한을 주기 위한 개념&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;Amazon Cognito&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;amazon-cognito&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#amazon-cognito&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Cognito/Cognito01.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Amazon Cognito는 웹 및 모바일 앱에 대한 인증, 권한 부여 및 사용자 관리를 제공&lt;/li&gt;
&lt;li&gt;사용자는 사용자 이름과 암호를 사용하여 직접 로그인하거나 Facebook, Amazon, Google 또는 Apple 같은 타사를 통해 로그인가능&lt;/li&gt;
&lt;li&gt;Cognito를 사용한 사용자 인증과 접속허가 종류
&lt;ul&gt;
&lt;li&gt;Identity Provider를 사용한 인증&lt;/li&gt;
&lt;li&gt;Cognito를 사용한 Credential 발행&lt;/li&gt;
&lt;li&gt;IAM 규칙&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cognito는 SQLite 데이터베이스를 사용, 시간적으로 마지막에 수정된 데이터를 우선적으로 하는 방침을 가짐&lt;/li&gt;
&lt;li&gt;Cognito는 Identity Pool 단위를 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS KMS ( Key Management Service )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-kms--key-management-service-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-kms--key-management-service-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Security/&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS Key Management Service(AWS KMS)는 데이터 암호화에 사용하는 암호화 키인 고객 마스터 키(CMK)를 쉽게 생성하고 제어할 수 있게 해주는 관리형 서비스&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS Organizations&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-organizations&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-organizations&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Security/&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;AWS Organizations는 AWS의 워크로드가 증가하고 확장됨에 따라 환경을 중앙에서 관리하는 서비스&lt;/li&gt;
&lt;li&gt;계정 생성을 자동화하고, 비즈니스 요구를 반영하도록 계정 그룹을 생성하고, 거버넌스를 위해 이러한 그룹에 정책을 적용이 가능&lt;/li&gt;
&lt;li&gt;AWS 계정에 대해 단일 결제 방법을 설정하여 결제 과정을 간소화가 가능&lt;/li&gt;
&lt;li&gt;WS Organizations는 모든 AWS 고객이 추가 비용 없이 사용가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS Shield&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-shield&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-shield&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;분산 서비스 거부 공격( DDoS )으로부터 웹 어플리케이션을 보호하는 서비스&lt;/li&gt;
&lt;li&gt;Cloudfront와 통합되어 있기 때문에 AWS의 서비스가 아니더라도 Cloudfront의 origin이라면 보호가 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Shield의 종류&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;shield의-종류&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#shield%ec%9d%98-%ec%a2%85%eb%a5%98&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Shield Stanard&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;기본적으로 적용되는 서비스로 설정을 하지 않아도 AWS 서비스에 활성화 되어있음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Shield Advanced&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;추가 비용을 내고 추가적인 서비스를 제공받는 것으로 L7 트래픽 모니터링, 사후 분석 등의 기능을 제공&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;p&gt; &lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;AWS WAF ( Web Application Firewall )&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-waf--web-application-firewall-&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-waf--web-application-firewall-&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/images/AWS/Security/WAF.png&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;웹 방화벽으로 Cloudfront와 ALB를 통해 서비스를 제공 ( ALB와 Cloudfront를 직접 지정하여 웹방화벽을 제공 )&lt;/li&gt;
&lt;li&gt;WAF을 활용하면 다양한 종류의 웹 공격에 대한 정보를 지닌 Rule을 선택하여 활성화하거나, 특정 Ip의 요청을 막을 수 있음&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;strong&gt;웹방화벽&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;웹방화벽&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%ec%9b%b9%eb%b0%a9%ed%99%94%eb%b2%bd&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;방화벽이 L4/ L4 Layer의 방어 ( IP와 Port 차단 )을 이용&lt;/li&gt;
&lt;li&gt;웹 방화벽은 L7( HTTP 헤더, HTTP 본문, URI 문자열, SQL 명령어, 스크립팅 )을 이용한 공격을 방어&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>AWS Analysis</title>
      <link>https://mungops.github.io/system/aws/amazonwebservice/aws_analysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mungops.github.io/system/aws/amazonwebservice/aws_analysis/</guid>
      <description>
        
        
        &lt;h1&gt;&lt;strong&gt;AWS Analysis&lt;/strong&gt;&lt;/h1&gt;&lt;hr&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;Amazon Athena&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;amazon-athena&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#amazon-athena&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/AWS/Analysis/&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;Amazon CloudSearch&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;amazon-cloudsearch&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#amazon-cloudsearch&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/AWS/Analysis/&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;Amazon EMR&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;amazon-emr&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#amazon-emr&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/AWS/Analysis/&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;Amazon ES&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;amazon-es&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#amazon-es&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/AWS/Analysis/&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;Amazon Kinesis&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;amazon-kinesis&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#amazon-kinesis&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/AWS/Analysis/&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;Amazon QuickSight&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;amazon-quicksight&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#amazon-quicksight&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/AWS/Analysis/&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;h2&gt;&lt;strong&gt;AWS DataPipeline&lt;/strong&gt;&lt;span class=&#34;hx-absolute -hx-mt-20&#34; id=&#34;aws-datapipeline&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#aws-datapipeline&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://mungops.github.io/AWS/Analysis/&#34; alt=&#34;AWS&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h1&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;&lt;/h1&gt;
      </description>
    </item>
    
  </channel>
</rss>
